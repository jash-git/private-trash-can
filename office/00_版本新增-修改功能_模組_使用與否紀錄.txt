日期			版本			內容[啟用測試於否]
2017/12/20		0.1.1.5			01.新增CRC16[還未使用]
								02.新增AES模組[還未使用]
								03.已經可以正確顯示反查授權結果 OK
								04.修改CS2PHPrestfulapi.RESTfulAPI_postBody 讓他可以支援 chunked 收值 OK
								05.使用CS2PHPrestfulapi.RESTfulAPI_postBody測試簡易SQL指令呼叫 OK	PS [String Data=CS2PHPrestfulapi.RESTfulAPI_postBody("http://192.168.1.68:24408/syris/v8/dbservice", "{\"sql_statement\": \"SELECT * FROM Variables;\"}",true);]
								
2017/12/21		0.1.1.6			01.單純PC DB增加SYDM資料表+controller資料表增加`sydm_id` int(11) NOT NULL DEFAULT '0'欄位
								02.修正Models.csv把電梯 128 改成 1 
								
2017/12/22		0.1.1.7			01.在FileLib.CS增加除錯(DEBUG)專用 log函式庫
								02.人和車輛UI在立即配發卡片時利用程式手法直接顯示對應持有人名稱(原本要DB有資料才關聯出來)
								03.修正未在線的控制器匯入無法顯示問題
								
2017/12/25		0.1.1.8			01.修改讀取版本的功能
								02.修改m_StrbutSys_01 變數預設值，預防第一次啟動時等待MYSQL造成系統UI顯示會有閃爍問題(測試->連線)
								03.把卡片UI預設變成一般卡(原本是空值，變相要使用者一定要編輯)
								04.人員/車輛 卡片列表中把NAME改成UID
								05.匯入控制器前把原先state=-1的資料全清空
								06.修正結束時間，不可超過硬體最大時間
								07.修正授權通行時段顯示時的間隔
								
2017/12/26		0.1.1.9			01.卡片資料表全部(id和state除外)匯出
								02.卡片資料表全部(id和state除外)匯入
								03.人員資料表全部(id和state除外)匯出
								04.人員資料表全部(id和state除外)匯入
								05.車輛資料表全部(id和state除外)匯出
								06.車輛資料表全部(id和state除外)匯入
								07.修正部門匯入方法，從一口氣匯入變成單一匯入，預防一筆失敗全部失敗的狀況

2017/12/27		0.1.2.0			01.取消車/人匯出圖片功能和無用欄位
								02.車/人匯入時要有預設部門
								03.卡片內碼元件要能支援C/P
								04.卡片列表UI增加顯示目前卡片列表數量
								05.未知控制器禁止編輯
								
2017/12/28		0.1.2.1			01.修正人/車/卡片 編輯UI 必填欄位的標記提醒
								02.修正人員車輛群組在啟動卡片參數時賦予預設值
								03.修改編修部門UI~製作下拉式選單
								04.修改編修部門UI~部門樹枝狀元件一律展開
								05.修改編修部門UI~ 可支援一個以上的元素拖拉移動
								06.新增人員時部門指向未分類
								07.新增車輛時部門指向未分類
								08.所有表格欄位寬度全部變成可調
								
2017/12/29		0.1.2.2			01.卡片數量計算顯示支援多國語系
								02.MessageBox全部支援多國語系
								03.實作控制器列表過濾電梯和門禁控制器功能
								04.授權查詢不要看到秒

2017/12/30		0.1.2.3			01.時間元件未啟動一律作清空處理
								
2018/01/02		0.1.2.4			01.門區的控制器列表不用列unknown部分	
								02.檢視授權內容的加上周計劃資訊
								03.修改授權運算時間點-只有在執行批次處理『Applied』
								
2018/01/04		指紋模組		01.讓MFC UI程式增加讀取命令參數功能
								02.將設備參數記錄到參數檔案中-調整成員函數等級為了讓APP物件呼叫
								03.將設備參數記錄到參數檔案中-在SDK_DEMO.cpp引用OEM.h
								04.將設備參數記錄到參數檔案中-抓取設備資訊
								05.將設備參數記錄到參數檔案中-增加extern變數
								06.將設備參數記錄到參數檔案中-抓參數不顯示UI
								
2018/01/05		0.1.2.5			01.授權結果列表中顯示卡片類型
								02.授權結果基本資料當式卡片時要顯示卡片類型
								03.修正門群參和門餐合併規則
								04.授權結果/卡片參數 內增加可判斷被影響的機制
								05.修正授權運算-步驟二:卡片參數先和對應授權參數運算

2018/01/07		0.1.2.7			01.顯示授權運算規則UI支援多國語系
								02.呼叫顯示授權運算規則UI

2018/01/08		0.1.2.8			01.修正運算授權結果用Filter方法-宣告對應變數並設定
								02.修正運算授權結果用Filter方法-停用之前演算法
								03.修正運算授權結果用Filter方法-運算函數修正	[50%]-開會後再繼續
								
2018/01/09		0.1.2.9			01.停用最後授權運算-準備製作排程
								02.授權最後一關計算問題整理(20180109).doc
								03.imagelist01元件圖片置換
								
2018/01/10		0.1.3.0			01.imagelist02元件圖片置換
								02.主功能選單增加SYDM
								
2018/01/11		0.1.3.1			01.修正授權紀錄查詢UI的元件展開沒有動畫效果問題
								02.停用授權運算中門區參數當過濾器功能
								03.修正紀錄最後運算結果的資料庫中資料表多增加一個狀態欄位
								04.設定顯示授權運算規則UI 按下OK表示直接建立 授權規則+授權運算，若按下Cancel表示單純建立授權規則
								05.不分是否是撤銷或新增授權在計算通行時段都用加法運算

2018/01/12		0.1.3.2			01.修正隱藏UI功能把SYDM按鈕在切換至台達版也要隱藏		[PS目前該按鈕為實現實際功能]
								02.實作-單純只考慮人群參數+卡片參數和是否合併之前傳送參數的運算結果寫入DB
								03.增加顯示授權結果判斷條件(ad.state > -1)	[PS只顯示 已授權 和 未授權 資料]
								04.修正查詢特定門的所有授權卡時，車卡均無法顯示的問題

2018/01/15		0.1.3.3			01.授權批次處理下拉是選單整合新版運算動作流程
								02.建立傳送授權參數函數	[PS 只建立函數外框和利用註解紀錄實作步驟說明+對應SQL]
																
2018/01/16		0.1.3.4			01.發現A.P.B UI 多國語系變數命名 和 SYDM UI有重疊問題之後會發生錯誤，所以先將A.P.B UI 多國語系變數做相關調整
								02.開發SYDM UI-增加『列表m_tabSub0004』和『編輯m_tabSub000400』頁籤元件
								03.開發SYDM UI-系統預設『列表m_tabSub0004』和『編輯m_tabSub000400』元件基本初始化
								
2018/01/17		0.1.3.5			01.整合呼叫傳送授權API的函數
								02.實作傳送授權參數函數	[完成40%]

2018/01/18		0.1.3.6			01.抓取報表ICON並放入V8專案中
								02.主功能選單增加報表選單
								03.開發報表 UI-『列表m_tabSub0300』頁籤元件
								04.開發報表 UI-系統預設『列表m_tabSub0300』元件基本初始化

2018/01/19		0.1.3.7			01.授權紀錄列表中顯示狀態欄位	[修改UI配置]
								02.授權紀錄列表中顯示狀態欄位	[修改SQL語法]
								03.授權紀錄列表中顯示狀態欄位	[修改顯示資料對應邏輯]
									-1	Not sent-Revoke
									0	sent
									1	Not sent-Authorize
								04.查C#有無免費報表元件

2018/01/20		在VS2015-.net4.0模式下測試報表元件成功
							
2018/01/22		0.1.3.8			01.製作record_status.csv[動態匯入使用]
								02.在MYSQL建立record_status資料表
								03.撰寫把record_status.csv匯入資料庫中

2018/01/23		0.1.3.9			01.增加controller_io_record 資料表到DB中
								02.寫出對應匯入測試資料SQL
								03.寫出撈出基本報表語法
									SELECT u.name AS user_name,c.name AS car_name,cd.display AS card_name,cir.card_unique_identifier AS card_code,rs.name AS state,cir.timestamp AS time
									FROM controller_io_record AS cir 
									LEFT JOIN card AS cd ON cir.card_unique_identifier = cd.card_code 
									LEFT JOIN record_status AS rs ON cir.status = rs.id 
									LEFT JOIN card_for_user_car AS cfuc ON cfuc.card_id = cd.id 
									LEFT JOIN user AS u ON u.id = cfuc.user_id 
									LEFT JOIN car AS c ON c.id = car_id 
								
2018/01/24		0.1.4.0			01.限定查詢卡片的Record SQL	[100%]
									00.沒有限定卡片-不用寫
									01.限定直接輸入卡號- 
										WHERE cir.card_unique_identifier = '判斷資料';
									02.限定某人的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card_for_user_car AS cfuc,card AS cd WHERE (cd.id=cfuc.card_id) AND (cfuc.user_id = '判斷資料') );
									03.限定下拉式選單 單張卡號-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
									04.限定部門下的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card AS cd,department_detail AS dd,card_for_user_car AS cfuc WHERE (cfuc.card_id=cd.id) AND ((dd.user_id=cfuc.user_id) OR (dd.car_id=cfuc.car_id)) AND (dd.dep_id='判斷資料'))
									05.限定部門下的[下拉式選單 單張卡號]-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
									06.限定部門+限定某人的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card_for_user_car AS cfuc,card AS cd WHERE (cd.id=cfuc.card_id) AND (cfuc.user_id = '判斷資料') );
									07.限定部門+限定某人+限定單張卡號-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
										
------------------------------------[授權65%][報表35%]

2018/01/25		0.1.4.1			01.設計開發報表UI-配置基本元件
								02.設計開發報表UI-撰寫基本事件
								03.設計開發報表UI-卡號元件自動切換
								04.設計開發報表UI-紀錄過濾器開啟狀態

2018/01/26		0.1.4.2			01.設計開發報表UI-報表人/車選擇事件
								02.設計開發報表UI-報表部門選擇事件
								03.設計開發報表UI-所有下拉式選單資料連結

2018/01/27		測試報表元件的相依檔案[01_SQLSysClrTypes、02_ReportViewer]
								
2018/01/29		0.1.4.3			01.設計開發報表UI-執行產生報表
								02.設計開發報表UI-卡片內碼元件要能支援C/P
								03.設計開發報表UI-卡片內碼防呆限制
								
2018/01/30		0.1.4.4			01.新增SYCG模式切換模式
								02.修正本地端資料庫結構 [按照WEB DB]
								03.修正儲存系統設定檔按鈕功能
								04.紀錄 HW_Net_API[SYDM API]、CS2PHPrestfulapi[實際執行API呼叫的函數類別]

------------------------------------[授權65%][報表75%][SYCG UI 20%]

2018/01/31		0.1.4.5			01.增加連接SERVER DB元件
								02.增加外部SERVER測試函數
								03.抓下SERVER上MySQL的資料-config [抓到SYCG的IP:PORT]
								04.修改DB架構
								05.匯入sycg_command

2018/02/01		0.1.4.6			01.修改DB架構
								02.製作SYDM列表UI-擺放元件+變數命名
								03.製作SYDM列表UI-製作多國語系
								04.從 DB 設定 SYCG Domain URL
								05.製作SYDM列表UI-製作SYDM匯入功能
								06.製作SYDM列表UI-新增SYDM功能
								07.製作SYDM列表UI-編輯SYDM功能
								
2018/02/02		分析Delta工具異常畫面問題
					結論1: 沒給SN我的SQL 搜尋會出現重複資料，這一部分只要改SQL就可以防堵沒給SN重複顯示 -> GROUP BY c.id
					結論2: 沒給SN 我會無法取得	sydm 的 id值 也不能用我的程式來做後續設定+控制
					
2018/02/02		0.1.4.7			01.製作SYDM編輯UI-擺放元件+變數命名
								02.製作SYDM編輯UI-製作多國語系
								03.製作SYDM編輯UI-串接本地端資料庫
								04.製作SYDM編輯UI-串接增加SYDM API+ReLoad SYDM API
								
2018/02/05		0.1.4.8			01.製作SYDM編輯UI-串接修改SYDM API+ReLoad SYDM API
								02.開會確定 匯入控制器功能的 KEY值從原本的SN->IP+PORT+MODE

2018/02/06		0.1.4.9			01.修改控制器匯入邏輯
									I.抓取控制器拓譜
										II.一次性(依序)抓取CONTROLLER(MAPPING--IP+PORT+MODE) 且更新現有SN的值
											PS
											a.MAPPING--IP+PORT+MODE
												IP->connection.address
												PORT->connection.port
												MODE->connection.mode
											b.且更新現有SN的值(SQL)
												SN->status.serial_number										
								02.修正控制器列表增加防堵沒給SN重複顯示 -> GROUP BY c.id
								03.修正Getsy_dm_Controller_id 函數和相關呼叫點
									I.修正函數
									II.修正呼叫點相關
								04.修正匯入電梯控制器時門區數量必須利用程式指定
				
2018/02/07		0.1.5.0			01.匯入控制器門區部分DBBUG修正-只有在非電梯控制器下自動增加門區
								02.匯入控制器門區部分DBBUG修正-只有在電梯控制器下自動增隱藏樓層
								03.製作TOOL模式移除報表相依元件SOP
									I.複製目前最後版本程式專案檔餅開啟編輯
									II.刪除Sub0300UI.cs內initSub0300UI()和SetrptSub0300()函數內容保留空殼+元件引用
									III.刪除畫面元件
									IV.刪除參考元件
									V.刪除Main_Frm.cs內的餘孽 - this.rptSub0300.RefreshReport();
									VI.重新編譯執行檔
------------------------------------[控制器管理擴展成多SYDM架構 10%][修改控制器匯入邏輯-使用IP+PORT+Mode作為唯一KEY 100%][匯入控制器門區部分DBBUG修正 100%][TOOL模式移除報表相依元件 100%][SYDM 管理UI+API呼叫 100%]									
								04.修正門區設定值與API定義一致(EX:開放通行與禁止通行，...)
									I.DB門區UI紀錄[0都不選 1開放 2禁止] <-> API(Set Door Setup)enabled[0: 停用，1: 啟用。] ~ API->DB(1->1,other->2);DB->API(1->1,other->0)
									II.密碼字串補F機制

*****************
PS-之後開始加註
『○』-SYRIS 
『●』-Delta
*****************

2018/02/08		0.1.5.1			01.輸出 Delta TOOL 給政璋『●』
								02.製作 V8 workstation_delta_release note.txt『●』
------------------------------------輸出Delta TOOL								
								03.新增SYDM授權用JSON類別-ControllerAuthorization.cs
								04.IP轉換函數32位元版-允許負數[符合SYDM-API規範]
									測試碼:
										String StrIP = "192.168.10.200";
										int intIP = 0;
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "127.0.0.200";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "1.0.0.0";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "255.255.255.255";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);								
								05.修正所有API內有關IP的運算公式變成32位元版-允許負數	『○』『●』
								06.20180208-新舊controller_io_record比較整理 [還未修改本地DB]
								
2018/02/09		0.1.5.2			01.把所有 SYDM API 中 address 和 serial_number 資料型態設定為 Int64	『○』『●』
								02.把IP轉換函數從32位元版改回64位元版-不允許有負數 『○』『●』
									驗證用程式區塊
										String StrIP = "192.168.10.200";
										int intIP = 0;
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "127.0.0.200";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "1.0.0.0";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "255.255.255.255";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "192.168.1.190";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = HW_Net_API.long2ip(intIP, true);
										long lngIP = HW_Net_API.ip2long(StrIP, true);								
								03.修正本地端DB-controller_io_record的資料結構 『○』
								04.確認比對新controller_io_record的資料結構並修正原本寫好的報表產生程式 『○』
									I.目前使用的關聯欄位:
										timestamp[控制器事件發生當下時間]
										card_unique_identifier[卡片內碼]
										status[控制器事件代號]
									II.把測試資料作適度修正方便程式驗證
										UPDATE controller_io_record SET card_unique_identifier='0000000000001001' WHERE card_unique_identifier='0000000017CD8BFA';# 影響了 709 行。
										UPDATE controller_io_record SET card_unique_identifier='9494949494949494' WHERE card_unique_identifier='2003000033110100';# 影響了 3 行。
										UPDATE controller_io_record SET card_unique_identifier='0000000000001005' WHERE card_unique_identifier='00803118C2364E04';# 影響了 294 行。
									III.修正SQL語法預設用卡號+時間排序 ORDER BY cir.card_unique_identifier,cir.timestamp
										SELECT u.name AS user_name,c.name AS car_name,cd.display AS card_name,cir.card_unique_identifier AS card_code,rs.name AS state,cir.timestamp AS time FROM controller_io_record AS cir LEFT JOIN card AS cd ON cir.card_unique_identifier = cd.card_code LEFT JOIN record_status AS rs ON cir.status = rs.id LEFT JOIN card_for_user_car AS cfuc ON cfuc.card_id = cd.id LEFT JOIN user AS u ON u.id = cfuc.user_id LEFT JOIN car AS c ON c.id = car_id ORDER BY cir.card_unique_identifier,cir.timestamp;
								05.User資料表目前的差異整理
								
								
								
								
								修正匯入控制器門數啟用數量要和SYDM一致

			


								