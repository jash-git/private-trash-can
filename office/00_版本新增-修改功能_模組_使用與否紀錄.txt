日期			版本			內容[啟用測試於否]
2017/12/20		0.1.1.5			01.新增CRC16[還未使用]
								02.新增AES模組[還未使用]
								03.已經可以正確顯示反查授權結果 OK
								04.修改CS2PHPrestfulapi.RESTfulAPI_postBody 讓他可以支援 chunked 收值 OK
								05.使用CS2PHPrestfulapi.RESTfulAPI_postBody測試簡易SQL指令呼叫 OK	PS [String Data=CS2PHPrestfulapi.RESTfulAPI_postBody("http://192.168.1.68:24408/syris/v8/dbservice", "{\"sql_statement\": \"SELECT * FROM Variables;\"}",true);]
								
2017/12/21		0.1.1.6			01.單純PC DB增加SYDM資料表+controller資料表增加`sydm_id` int(11) NOT NULL DEFAULT '0'欄位
								02.修正Models.csv把電梯 128 改成 1 
								
2017/12/22		0.1.1.7			01.在FileLib.CS增加除錯(DEBUG)專用 log函式庫
								02.人和車輛UI在立即配發卡片時利用程式手法直接顯示對應持有人名稱(原本要DB有資料才關聯出來)
								03.修正未在線的控制器匯入無法顯示問題
								
2017/12/25		0.1.1.8			01.修改讀取版本的功能
								02.修改m_StrbutSys_01 變數預設值，預防第一次啟動時等待MYSQL造成系統UI顯示會有閃爍問題(測試->連線)
								03.把卡片UI預設變成一般卡(原本是空值，變相要使用者一定要編輯)
								04.人員/車輛 卡片列表中把NAME改成UID
								05.匯入控制器前把原先state=-1的資料全清空
								06.修正結束時間，不可超過硬體最大時間
								07.修正授權通行時段顯示時的間隔
								
2017/12/26		0.1.1.9			01.卡片資料表全部(id和state除外)匯出
								02.卡片資料表全部(id和state除外)匯入
								03.人員資料表全部(id和state除外)匯出
								04.人員資料表全部(id和state除外)匯入
								05.車輛資料表全部(id和state除外)匯出
								06.車輛資料表全部(id和state除外)匯入
								07.修正部門匯入方法，從一口氣匯入變成單一匯入，預防一筆失敗全部失敗的狀況

2017/12/27		0.1.2.0			01.取消車/人匯出圖片功能和無用欄位
								02.車/人匯入時要有預設部門
								03.卡片內碼元件要能支援C/P
								04.卡片列表UI增加顯示目前卡片列表數量
								05.未知控制器禁止編輯
								
2017/12/28		0.1.2.1			01.修正人/車/卡片 編輯UI 必填欄位的標記提醒
								02.修正人員車輛群組在啟動卡片參數時賦予預設值
								03.修改編修部門UI~製作下拉式選單
								04.修改編修部門UI~部門樹枝狀元件一律展開
								05.修改編修部門UI~ 可支援一個以上的元素拖拉移動
								06.新增人員時部門指向未分類
								07.新增車輛時部門指向未分類
								08.所有表格欄位寬度全部變成可調
								
2017/12/29		0.1.2.2			01.卡片數量計算顯示支援多國語系
								02.MessageBox全部支援多國語系
								03.實作控制器列表過濾電梯和門禁控制器功能
								04.授權查詢不要看到秒

2017/12/30		0.1.2.3			01.時間元件未啟動一律作清空處理
								
2018/01/02		0.1.2.4			01.門區的控制器列表不用列unknown部分	
								02.檢視授權內容的加上周計劃資訊
								03.修改授權運算時間點-只有在執行批次處理『Applied』
								
2018/01/04		指紋模組		01.讓MFC UI程式增加讀取命令參數功能
								02.將設備參數記錄到參數檔案中-調整成員函數等級為了讓APP物件呼叫
								03.將設備參數記錄到參數檔案中-在SDK_DEMO.cpp引用OEM.h
								04.將設備參數記錄到參數檔案中-抓取設備資訊
								05.將設備參數記錄到參數檔案中-增加extern變數
								06.將設備參數記錄到參數檔案中-抓參數不顯示UI
								
2018/01/05		0.1.2.5			01.授權結果列表中顯示卡片類型
								02.授權結果基本資料當式卡片時要顯示卡片類型
								03.修正門群參和門餐合併規則
								04.授權結果/卡片參數 內增加可判斷被影響的機制
								05.修正授權運算-步驟二:卡片參數先和對應授權參數運算

2018/01/07		0.1.2.7			01.顯示授權運算規則UI支援多國語系
								02.呼叫顯示授權運算規則UI

2018/01/08		0.1.2.8			01.修正運算授權結果用Filter方法-宣告對應變數並設定
								02.修正運算授權結果用Filter方法-停用之前演算法
								03.修正運算授權結果用Filter方法-運算函數修正	[50%]-開會後再繼續
								
2018/01/09		0.1.2.9			01.停用最後授權運算-準備製作排程
								02.授權最後一關計算問題整理(20180109).doc
								03.imagelist01元件圖片置換
								
2018/01/10		0.1.3.0			01.imagelist02元件圖片置換
								02.主功能選單增加SYDM
								
2018/01/11		0.1.3.1			01.修正授權紀錄查詢UI的元件展開沒有動畫效果問題
								02.停用授權運算中門區參數當過濾器功能
								03.修正紀錄最後運算結果的資料庫中資料表多增加一個狀態欄位
								04.設定顯示授權運算規則UI 按下OK表示直接建立 授權規則+授權運算，若按下Cancel表示單純建立授權規則
								05.不分是否是撤銷或新增授權在計算通行時段都用加法運算

2018/01/12		0.1.3.2			01.修正隱藏UI功能把SYDM按鈕在切換至台達版也要隱藏		[PS目前該按鈕為實現實際功能]
								02.實作-單純只考慮人群參數+卡片參數和是否合併之前傳送參數的運算結果寫入DB
								03.增加顯示授權結果判斷條件(ad.state > -1)	[PS只顯示 已授權 和 未授權 資料]
								04.修正查詢特定門的所有授權卡時，車卡均無法顯示的問題

2018/01/15		0.1.3.3			01.授權批次處理下拉是選單整合新版運算動作流程
								02.建立傳送授權參數函數	[PS 只建立函數外框和利用註解紀錄實作步驟說明+對應SQL]
																
2018/01/16		0.1.3.4			01.發現A.P.B UI 多國語系變數命名 和 SYDM UI有重疊問題之後會發生錯誤，所以先將A.P.B UI 多國語系變數做相關調整
								02.開發SYDM UI-增加『列表m_tabSub0004』和『編輯m_tabSub000400』頁籤元件
								03.開發SYDM UI-系統預設『列表m_tabSub0004』和『編輯m_tabSub000400』元件基本初始化
								
2018/01/17		0.1.3.5			01.整合呼叫傳送授權API的函數
								02.實作傳送授權參數函數	[完成40%]

2018/01/18		0.1.3.6			01.抓取報表ICON並放入V8專案中
								02.主功能選單增加報表選單
								03.開發報表 UI-『列表m_tabSub0300』頁籤元件
								04.開發報表 UI-系統預設『列表m_tabSub0300』元件基本初始化

2018/01/19		0.1.3.7			01.授權紀錄列表中顯示狀態欄位	[修改UI配置]
								02.授權紀錄列表中顯示狀態欄位	[修改SQL語法]
								03.授權紀錄列表中顯示狀態欄位	[修改顯示資料對應邏輯]
									-1	Not sent-Revoke
									0	sent
									1	Not sent-Authorize
								04.查C#有無免費報表元件

2018/01/20		在VS2015-.net4.0模式下測試報表元件成功
							
2018/01/22		0.1.3.8			01.製作record_status.csv[動態匯入使用]
								02.在MYSQL建立record_status資料表
								03.撰寫把record_status.csv匯入資料庫中

2018/01/23		0.1.3.9			01.增加controller_io_record 資料表到DB中
								02.寫出對應匯入測試資料SQL
								03.寫出撈出基本報表語法
									SELECT u.name AS user_name,c.name AS car_name,cd.display AS card_name,cir.card_unique_identifier AS card_code,rs.name AS state,cir.timestamp AS time
									FROM controller_io_record AS cir 
									LEFT JOIN card AS cd ON cir.card_unique_identifier = cd.card_code 
									LEFT JOIN record_status AS rs ON cir.status = rs.id 
									LEFT JOIN card_for_user_car AS cfuc ON cfuc.card_id = cd.id 
									LEFT JOIN user AS u ON u.id = cfuc.user_id 
									LEFT JOIN car AS c ON c.id = car_id 
								
2018/01/24		0.1.4.0			01.限定查詢卡片的Record SQL	[100%]
									00.沒有限定卡片-不用寫
									01.限定直接輸入卡號- 
										WHERE cir.card_unique_identifier = '判斷資料';
									02.限定某人的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card_for_user_car AS cfuc,card AS cd WHERE (cd.id=cfuc.card_id) AND (cfuc.user_id = '判斷資料') );
									03.限定下拉式選單 單張卡號-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
									04.限定部門下的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card AS cd,department_detail AS dd,card_for_user_car AS cfuc WHERE (cfuc.card_id=cd.id) AND ((dd.user_id=cfuc.user_id) OR (dd.car_id=cfuc.car_id)) AND (dd.dep_id='判斷資料'))
									05.限定部門下的[下拉式選單 單張卡號]-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
									06.限定部門+限定某人的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card_for_user_car AS cfuc,card AS cd WHERE (cd.id=cfuc.card_id) AND (cfuc.user_id = '判斷資料') );
									07.限定部門+限定某人+限定單張卡號-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
										
------------------------------------[授權65%][報表35%]

2018/01/25		0.1.4.1			01.設計開發報表UI-配置基本元件
								02.設計開發報表UI-撰寫基本事件
								03.設計開發報表UI-卡號元件自動切換
								04.設計開發報表UI-紀錄過濾器開啟狀態

2018/01/26		0.1.4.2			01.設計開發報表UI-報表人/車選擇事件
								02.設計開發報表UI-報表部門選擇事件
								03.設計開發報表UI-所有下拉式選單資料連結

2018/01/27		測試報表元件的相依檔案[01_SQLSysClrTypes、02_ReportViewer]
								
2018/01/29		0.1.4.3			01.設計開發報表UI-執行產生報表
								02.設計開發報表UI-卡片內碼元件要能支援C/P
								03.設計開發報表UI-卡片內碼防呆限制
								
2018/01/30		0.1.4.4			01.新增SYCG模式切換模式
								02.修正本地端資料庫結構 [按照WEB DB]
								03.修正儲存系統設定檔按鈕功能
								04.紀錄 HW_Net_API[SYDM API]、CS2PHPrestfulapi[實際執行API呼叫的函數類別]

------------------------------------[授權65%][報表75%][SYCG UI 20%]

2018/01/31		0.1.4.5			01.增加連接SERVER DB元件
								02.增加外部SERVER測試函數
								03.抓下SERVER上MySQL的資料-config [抓到SYCG的IP:PORT]
								04.修改DB架構
								05.匯入sycg_command

2018/02/01		0.1.4.6			01.修改DB架構
								02.製作SYDM列表UI-擺放元件+變數命名
								03.製作SYDM列表UI-製作多國語系
								04.從 DB 設定 SYCG Domain URL
								05.製作SYDM列表UI-製作SYDM匯入功能
								06.製作SYDM列表UI-新增SYDM功能
								07.製作SYDM列表UI-編輯SYDM功能
								
2018/02/02		分析Delta工具異常畫面問題
					結論1: 沒給SN我的SQL 搜尋會出現重複資料，這一部分只要改SQL就可以防堵沒給SN重複顯示 -> GROUP BY c.id
					結論2: 沒給SN 我會無法取得	sydm 的 id值 也不能用我的程式來做後續設定+控制
					
2018/02/02		0.1.4.7			01.製作SYDM編輯UI-擺放元件+變數命名
								02.製作SYDM編輯UI-製作多國語系
								03.製作SYDM編輯UI-串接本地端資料庫
								04.製作SYDM編輯UI-串接增加SYDM API+ReLoad SYDM API
								
2018/02/05		0.1.4.8			01.製作SYDM編輯UI-串接修改SYDM API+ReLoad SYDM API
								02.開會確定 匯入控制器功能的 KEY值從原本的SN->IP+PORT+MODE

2018/02/06		0.1.4.9			01.修改控制器匯入邏輯
									I.抓取控制器拓譜
										II.一次性(依序)抓取CONTROLLER(MAPPING--IP+PORT+MODE) 且更新現有SN的值
											PS
											a.MAPPING--IP+PORT+MODE
												IP->connection.address
												PORT->connection.port
												MODE->connection.mode
											b.且更新現有SN的值(SQL)
												SN->status.serial_number										
								02.修正控制器列表增加防堵沒給SN重複顯示 -> GROUP BY c.id
								03.修正Getsy_dm_Controller_id 函數和相關呼叫點
									I.修正函數
									II.修正呼叫點相關
								04.修正匯入電梯控制器時門區數量必須利用程式指定
				
2018/02/07		0.1.5.0			01.匯入控制器門區部分DBBUG修正-只有在非電梯控制器下自動增加門區
								02.匯入控制器門區部分DBBUG修正-只有在電梯控制器下自動增隱藏樓層
								03.製作TOOL模式移除報表相依元件SOP
									I.複製目前最後版本程式專案檔餅開啟編輯
									II.刪除Sub0300UI.cs內initSub0300UI()和SetrptSub0300()函數內容保留空殼+元件引用
									III.刪除畫面元件
									IV.刪除參考元件
									V.刪除Main_Frm.cs內的餘孽 - this.rptSub0300.RefreshReport();
									VI.重新編譯執行檔
------------------------------------[控制器管理擴展成多SYDM架構 10%][修改控制器匯入邏輯-使用IP+PORT+Mode作為唯一KEY 100%][匯入控制器門區部分DBBUG修正 100%][TOOL模式移除報表相依元件 100%][SYDM 管理UI+API呼叫 100%]									
								04.修正門區設定值與API定義一致(EX:開放通行與禁止通行，...)
									I.DB門區UI紀錄[0都不選 1開放 2禁止] <-> API(Set Door Setup)enabled[0: 停用，1: 啟用。] ~ API->DB(1->1,other->2);DB->API(1->1,other->0)
									II.密碼字串補F機制

*****************
PS-之後開始加註
『○』-SYRIS 
『●』-Delta
*****************

2018/02/08		0.1.5.1			01.輸出 Delta TOOL 給政璋『●』
								02.製作 V8 workstation_delta_release note.txt『●』
------------------------------------輸出Delta TOOL								
								03.新增SYDM授權用JSON類別-ControllerAuthorization.cs
								04.IP轉換函數32位元版-允許負數[符合SYDM-API規範]
									測試碼:
										String StrIP = "192.168.10.200";
										int intIP = 0;
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "127.0.0.200";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "1.0.0.0";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "255.255.255.255";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);								
								05.修正所有API內有關IP的運算公式變成32位元版-允許負數	『○』『●』
								06.20180208-新舊controller_io_record比較整理 [還未修改本地DB]
								
2018/02/09		0.1.5.2			01.把所有 SYDM API 中 address 和 serial_number 資料型態設定為 Int64	『○』『●』
								02.把IP轉換函數從32位元版改回64位元版-不允許有負數 『○』『●』
									驗證用程式區塊
										String StrIP = "192.168.10.200";
										int intIP = 0;
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "127.0.0.200";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "1.0.0.0";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "255.255.255.255";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "192.168.1.190";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = HW_Net_API.long2ip(intIP, true);
										long lngIP = HW_Net_API.ip2long(StrIP, true);								
								03.修正本地端DB-controller_io_record的資料結構 『○』
								04.確認比對新controller_io_record的資料結構並修正原本寫好的報表產生程式 『○』
									I.目前使用的關聯欄位:
										timestamp[控制器事件發生當下時間]
										card_unique_identifier[卡片內碼]
										status[控制器事件代號]
									II.把測試資料作適度修正方便程式驗證
										UPDATE controller_io_record SET card_unique_identifier='0000000000001001' WHERE card_unique_identifier='0000000017CD8BFA';# 影響了 709 行。
										UPDATE controller_io_record SET card_unique_identifier='9494949494949494' WHERE card_unique_identifier='2003000033110100';# 影響了 3 行。
										UPDATE controller_io_record SET card_unique_identifier='0000000000001005' WHERE card_unique_identifier='00803118C2364E04';# 影響了 294 行。
									III.修正SQL語法預設用卡號+時間排序 ORDER BY cir.card_unique_identifier,cir.timestamp
										SELECT u.name AS user_name,c.name AS car_name,cd.display AS card_name,cir.card_unique_identifier AS card_code,rs.name AS state,cir.timestamp AS time FROM controller_io_record AS cir LEFT JOIN card AS cd ON cir.card_unique_identifier = cd.card_code LEFT JOIN record_status AS rs ON cir.status = rs.id LEFT JOIN card_for_user_car AS cfuc ON cfuc.card_id = cd.id LEFT JOIN user AS u ON u.id = cfuc.user_id LEFT JOIN car AS c ON c.id = car_id ORDER BY cir.card_unique_identifier,cir.timestamp;
								
2018/02/11		20180211-home note.txt								
								authorization_data-calculate_saveDB()
									回圈01-依序取出卡資料
										回圈02-依序取出門資料
											取出DB-先前派送 [db_AnsData]
										
									ANS->運算後的結果	門VS卡

								==========================================

								authorization_data-sendData2HW()
									找出第一筆狀態非0的資料 並記錄卡ID+門ID
									從門ID找出對應控制器[controller_model,Strcontroller_sn,Strcontroller_IP,Strconnetction_mode]
										在從控制器找出所有下面的門ID
											在透過所有門ID(N個)+卡ID(1個) 找出有記錄的『門VS卡((N個))』的授權資料-AL_AnsData
											
									未實做  把『門(N個)VS卡』-> 『控(1個)VS卡』									
								
2018/02/12		0.1.5.3			01.增加sendData2HW()中controller_Port的抓取-呼叫Getsy_dm_Controller_id需要使用
								02.sendData2HW()中增加門參整合用變數
								03.sendData2HW()中增加計算那些門或那些樓層可通行的flag
								04.把資料從『門(N個)VS卡』-> 『控(1個)VS卡』
								05.AnsAuthorization指定SYDM控制器ID-呼叫Getsy_dm_Controller_id					

2018/02/13		0.1.5.4			01.sendData2HW()中增加抓取卡片內碼+卡片display+卡片pin_code+卡片效期+卡片APB
								02.AnsAuthorization指定APB參數
								03.AnsAuthorization指定display_text參數
								04.AnsAuthorization指定pin_code參數
								05.AnsAuthorization指定valid_start_timestamp+valid_endle_timestamp參數
								06.增加ControllerDelAuthorization類別
								07.授權物件轉JSON字串
								08.授權JSON字串存檔(紀錄最後一次)『○』
								09.修改sendData2HW()中搜尋還未派送的授權資料
								10.SYDM控制器授權API呼叫『○』
								11.修正DB派送授權的紀錄狀態語法讓DB支援派送失敗也可復原狀態值
								
2018/02/14		0.1.5.5			01.修改EndPoint,程式內所有 /syris/v8字串替換成/syris/sydm	『○』『●』
																
2018/02/20		用Uniform Server模擬 遠端DB SERVER

2018/02/21		0.1.5.6			01.增加資料庫欄位名稱替換類別
								02.在MySQL.cs中的External_MySQL類別中增加
								03.修正本地端資料庫結構-user表增加emp_title欄位『○』
								04.在MySQL.cs中的External_MySQL類別中增加 DownloadDBTable()/UploadDBTable()函數 『○』
									測試用程式碼:
										External_MySQL m_ExMySQL = new External_MySQL();
										bool blnAns = m_ExMySQL.CheckMySQL("127.0.0.1", "3306", "root", "usbw");
										blnAns = m_ExMySQL.DownloadDBTable("controller_io_record", "REPLACE INTO", true);
										blnAns = m_ExMySQL.DownloadDBTable("card", "REPLACE INTO", true);
										blnAns = m_ExMySQL.UploadDBTable("card", "REPLACE INTO", true);
										
										m_ExMySQL.m_ALReplaceField.Clear();
										ReplaceField RF_Data01 = new ReplaceField();
										RF_Data01.StrOldField = "`name`, `alias_name`";
										RF_Data01.StrNewField = "`real_name`, `alias_name`";
										m_ExMySQL.m_ALReplaceField.Add(RF_Data01);
										ReplaceField RF_Data00 = new ReplaceField();
										RF_Data00.StrOldField = "`user_name`, `password`";
										RF_Data00.StrNewField = "`name`, `password`";
										m_ExMySQL.m_ALReplaceField.Add(RF_Data00);
										blnAns = m_ExMySQL.UploadDBTable("user", "REPLACE INTO", true);

										m_ExMySQL.m_ALReplaceField.Clear();
										RF_Data01.StrOldField = "`real_name`, `alias_name`";
										RF_Data01.StrNewField = "`name`, `alias_name`";
										m_ExMySQL.m_ALReplaceField.Add(RF_Data01);
										RF_Data00.StrOldField = "`name`, `password`";
										RF_Data00.StrNewField = "`user_name`, `password`";
										m_ExMySQL.m_ALReplaceField.Add(RF_Data00);
										blnAns = m_ExMySQL.DownloadDBTable("user", "REPLACE INTO", true);
								05.Remote/Local DB 人員匯入/匯出 『○』
								06.User資料匯入時會沒有填生日的狀況BUG修正 『○』
								
2018/02/22		0.1.5.7			01.Remote/Local DB Tabe 匯入/匯出整理
								02.Remote/Local DB other 匯入/匯出 『○』
								03.修正IP 196 上的 authorization_data 資料表結構 『○』
								
2018/02/23		0.1.5.8			01.修改 控制器編輯UI 增加SYDM選項元件 『○』
									利用程式切換 控制器編輯UI SYDM元件顯示狀態
									SYDM 選擇元件資料初始化
									SYDM 選擇元件 修改偵測
									SYDM 選擇元件在指定控制器時顯示對應值
									修改 儲存控制器時支援 SYDM 選擇元件

2018/02/25		20180225-note

2018/02/26		0.1.5.9			01.按照hino調整Remote DB user Table的現況 調整 自己 Local DB (修正本地端資料庫結構) 『○』
								02.SYCG模式下-建立/暫存 當下要操作的SYDM ID
									-X  授權時還未有正確解
								03.開發呼叫SYCG API函數
									按照命令名稱轉換成命令數字值
									設定SYDM編號
									
2018/02/27		0.1.6.0			01.開發呼叫SYCG API函數
									產出對應輸入參數框架
									執行呼叫API
									API呼叫結果拆解框架
------------------------------------[Remote/Local DB 資料表資料交換功能 100%][控制器編輯UI 增加SYDM選項元件 100%][開發呼叫SYCG API函數 50%]

2018/02/28		0.1.6.1			01.SYDM和SYCG API呼叫並存實現『○』
									SYCG_setSYCGDomainURL,setAPIDomainURL,OK
									SYDM_GET_CONTROLLER,getController,OK
									SYDM_GET_CONTROLLER_CONNECTION,getController_Connection,OK

2018/03/01		0.1.6.2			01.SYDM和SYCG API呼叫並存實現『○』
									SYDM_GET_CONTROLLER_ACTIVE,getController_Active,OK
									SYDM_SET_CONTROLLER_ACTIVE,setController_Active,OK
									SYDM_LOAD_CONTROLLER,load_All_Controller,OK
									SYDM_SET_CONTROLLER_APB_AB_DOOR,setController_Apb_Ab_Door,OK
									SYDM_SET_CONTROLLER_HOLIDAY,setController_Holiday,OK
									SYDM_SET_CONTROLLER_SETUP,setController_Setup,OK
									SYDM_SET_CONTROLLER_CONNECTION,setController_Connection,OK
									SYDM_ADD_CONTROLLER,add_Controller,OK
									SYDM_GET_CONTROLLER_STATUS,getController_Status,OK
									SYDM_GET_DOOR_TOPOLOGY,getDoorTopology,OK
									SYDM_GET_DOOR_SECURITY,getDoorSecurity,OK
									SYDM_GET_DOOR_SETUP,getDoorSetup,OK
									SYDM_GET_DOOR_TIME_PERIOD_CONTROL,getDoorTimePeriodControl,OK
									SYDM_GET_DOOR_AUTO_OPEN_TIME_PERIOD_CONTROL,getDoorAutoOpenTimePeriodControl,OK
									SYDM_SET_DOOR_SECURITY,setDoorSecurity,OK
									SYDM_SET_DOOR_SETUP,setDoorSetup,OK
									SYDM_SET_DOOR_TIME_PERIOD_CONTROL,setDoorTimePeriodControl,OK
									SYDM_SET_DOOR_AUTO_OPEN_TIME_PERIOD_CONTROL,setDoorAutoOpenTimePeriodControl,OK

2018/03/02		0.1.6.3			01.SYCG測試連線時要按照測試結果修改下方方下拉式選單狀態		
								02.SYCG模式下測試SYDM匯入-有連線/無連線-OK
								03.SYCG模式下測試控制器匯入-有連線/無連線-OK
								04.SYCG模式下DB匯入匯出功能UI實作『○』
								

2018/03/04		0.1.6.4			01.再檢查一次DB 匯入/匯出 TABLE 清單+帳密是否正確
								02.匯入控制器在SYCG模式下要紀錄指定SYDM變數-m_ALSYDMid 『○』
								
2018/03/05		0.1.6.5			01.SYCG模式下匯入控制器API整合測試完成『○』
								02.SYCG模式下編輯控制器API整合測試完成『○』
								03.SYCG模式下新增控制器API整合測試完成『○』
								04.SYCG模式下載入門區參數API整合測試完成『○』
								05.SYCG模式下寫入門區參數API整合測試完成『○』
								06.SYCG授權傳送模式『○』
									新增一個ArrayList紀錄CONTROLLER的SYDM ID
								07.SYCG模式下授權參數API整合測試完成『○』
								08.DB匯出到IP-78測試

2018/03/06		0.1.6.6			01.CS2PHPrestfulapi 傳送全部改為UTF8 『○』
									使用[C# 傳送JSON給PHP API並等待PHP長時間運算並接收運算結果]模擬確定中文沒亂碼
								02.建立UploadDB_door()和 DownloadDB_door() 為了讓上傳資料符合HINO原先規劃『○』

2018/03/07		0.1.6.6			
--------------------------------輸出Delta TOOL
									0.1.5.5			01.修改EndPoint,程式內所有 /syris/v8字串替換成/syris/sydm	『○』『●』
									0.1.5.6			01.修改本地端資料庫架構	
--------------------------------輸出TOOL
--------------------------------輸出SYDM-Workstation
--------------------------------輸出SYCG-Workstation								

2018/03/07		0.1.6.7			01.修改匯入config的DB函數 不刪除BAT和config.sql『○』
								02.編譯SYCG/SYDM不同版本時抬頭要跟著改變『○』『●』
--------------------------------[Remote/Local DB 資料交換100%][SYDM模式授權100%][SYCG/SYCG模式API整合100%]
								
2018/03/08		0.1.6.8			01.設定C# 跨執行緒(thread)存取UI『○』『●』
								02.系統頁面連線測試變成有等待動畫『○』『●』
									SYCG等待動畫
									SYDM等待動畫
								03.Remote/Local DB 資料交換變成有等待動畫『○』
									DB匯入
									DB匯出
								04.調整系統設定頁面的TabIndax『○』『●』
								05.把設定檔案副檔名從CSV變成SET『○』『●』
									sycg_command.csv->sycg_command.set
									record_status.csv->record_status.set
									card_type.csv->card_type.set
									Models.csv->Models.set
								06.V8_Windows_Workstation安裝包『○』
								07.SYDM匯入變成有等待動畫『○』
								
2018/03/09		0.1.6.9			01.SYCG模式下新增控制器一定要有SYDM的防呆機制『○』
								02.控制器列表UI顯示SYDM名稱『○』
								03.重寫get_show_Controllers函數(藉此提升UI使用感覺) [先把原本函數更名成get_show_Controllers_at20180309 預防重寫失敗] 『○』『●』
									cleandgvSub0000_01()
									getDBControllerShowData()
									public static void Thread_getControllerStatus(object arg)
								04.重寫匯入控制器按鈕變成有等待動畫程式『○』『●』
									
									
2018/03/11		0.1.7.0			01.授權結束要有對話盒『○』
									修正傳送授權內容到紀錄文字檔符合SYDM/SYCG兩種模式
									修改語系檔新增對話盒文字
								02.get_show_Controllers(false)『○』『●』
									增控制器後要能更新控制列表
									批次作業要能更新控制列表

2018/03/12		0.1.7.1			01.修正匯入SYDM前必須確定SYCG的URL『○』
--------------------------------
系統頁面連線測試變成有等待動畫[100%]
Remote/Local DB 資料交換變成有等待動畫[100%]
SYDM匯入變成有等待動畫[100%]
把設定檔案副檔名從CSV變成SET[100%]
控制器列表UI顯示SYDM名稱[100%]
重寫匯入控制器按鈕變成有等待動畫程式[100%]
授權結束要有對話盒提示[100%]
控制器列表頁面改成非每次進入都執行控制器的連線狀態抓取[100%]

2018/03/13		0.1.7.2			01.連線按鈕需要能有顏色識別上次連線狀態『○』『●』
								02.SYDM編輯要能停用/啟用 『○』
								03.所有表格支援多國語系(25%)『○』『●』
									控制器列表多國語系
									APB管理列表多國語系
									區域門區群組列表多國語系
									SYDM列表多國語系								

2018/03/14		0.1.7.3			01.門區參數UI增加新設定區塊-無法通行警報(40%)『○』『●』
									調整UI+擠出空間
									放上對應元件並且重新命名
									支援多國語系
									指定音效下拉選單
									UI啟用鎖定事件
									驗證在Delta模式的UI顯示
									
2018/03/15		0.1.7.4			01.門區參數UI增加新設定區塊-無法通行警報(100%)『○』『●』		
									修改本地資料庫中door_extend表新增三個欄位-access_den、black_me、suspend
									撰寫door_extend表中access_den欄位的相關程式碼
--------------------------------輸出Delta TOOL									
								
2018/03/16		0.1.7.5			01.修改資料庫結構 `controller_io_record` 『○』『●』
								02.修正報表主選單頁面語系切換BUG 『○』
								03.下載指定時間報表資料 『○』(沒指定時間就會全部下載)
									https://stackoverflow.com/questions/935556/mysql-dump-by-query
									http://blog.csdn.net/xin_yu_xin/article/details/7574662
									https://stackoverflow.com/questions/26261670/mysqldump-with-where-clause-is-not-working
									實際測試會動語法:
										mysqldump.exe -h127.0.0.1 -P3307 -uroot -pusbw -t -e -q --complete-insert --extended-insert=FALSE --default-character-set=utf8 --hex-blob v8_workstation controller_io_record --where="537811566<= timestamp AND timestamp<=574445166" > controller_io_record_00.sql
										mysqldump.exe -h127.0.0.1 -P3307 -uroot -pusbw -t -e -q --complete-insert --extended-insert=FALSE --default-character-set=utf8 --hex-blob v8_workstation controller_io_record --where="546955202<= timestamp AND timestamp<=571255622" > controller_io_record_01.sql
										pause
								04.修改資料庫結構 `user` 資料表的 emp_title 拿掉了 『○』『●』
								05.APB管理要分成SYDM/SYCG兩種模式
									增加SYDM選擇元件
									SYDM 選擇元件資料初始化
									SYCG/SYDM模式下SYDM ID綁定程式
									
2018/03/19		0.1.7.6			01.控制器為TCP SERVER要顯示為預設『○』『●』
								02.所有表格支援多國語系(100%)『○』『●』
									人員列表多國語系
									人員編輯內的卡片列表多國語系
									控制器編輯內的假日列表多國語系
									APB編輯內列表多國語系								
									區域門區群組編輯內列表多國語系
--------------------------------輸出SYDM-Workstation-v0.1.7.6.exe
									車輛列表多國語系
									車輛編輯內的卡片列表多國語系
									卡片資料列表多國語系
									人員車輛群組列表多國語系									
									人員車輛群組編輯內列表多國語系									
									授權記錄列表多國語系									
									授權記錄編輯內列表多國語系
									授權記錄查詢列表多國語系
								03.換ICON 為了能在XP上執行『○』

2018/03/20		0.1.7.7			01.替換MYSQL的EXE-mysql.exe、mysqldump.exe為了能在XP上執行『○』 (來源:xampp-win32-1.8.3-5-VC11.zip)
								02.確認只有在SYCG模式才能有DB匯入匯出和報表功能『○』
--------------------------------輸出SYCG-Workstation-v0.1.7.7.exe
--------------------------------輸出SYDM-Workstation-v0.1.7.7.exe
				0.1.7.8			03.修正BUG-get_show_Controllers必須支援系統頁面的操作模式選項『○』
								04.SYCG/SYDM模式 IP/PORT文字切換『○』『●』
--------------------------------輸出SYCG-Workstation-v0.1.7.8.exe
--------------------------------輸出SYCG-Workstation-v0.1.7.8.exe

2018/03/21		0.1.7.9			01.修正BUG-無法顯示門區設定(增加access_den值)『○』『●』
								02.按下門區儲存時中時把UI值存到DB就算沒有啟動也不要回覆預設值，停用「Sub000100_getUIValue」『○』『●』
--------------------------------輸出SYCG-Workstation-v0.1.7.9.exe
--------------------------------輸出SYCG-Workstation-v0.1.7.9.exe
--------------------------------輸出Delta TOOL
				0.1.8.0			01.程式標題改成『Workstation [for SYDM]- V版號』『○』
--------------------------------輸出SYCG-Workstation-v0.1.8.0.exe
--------------------------------輸出SYCG-Workstation-v0.1.8.0.exe
--------------------------------
連線按鈕需要能有顏色識別上次連線狀態[100%]
SYDM編輯要能停用/啟用[100%]
所有表格支援多國語系[100%]
門區參數UI增加新設定區塊-無法通行警報[100%]
修改資料庫結構[100%]
修正報表主選單頁面語系切換BUG[100%]
下載指定時間報表資料[100%]
APB管理要分成SYDM/SYCG兩種模式[100%]
控制器為TCP SERVER要顯示為預設[100%]
替換MYSQL的EXE-mysql.exe、mysqldump.exe為了能在XP上執行[100%]
修正BUG-get_show_Controllers必須支援系統頁面的操作模式選項[100%]
修正BUG-無法顯示門區設定(增加access_den值)[100%]

2018/03/22		0.1.8.1			01.人員工號改必填『○』
									增加必填星號標記
									增加必填防呆偵測
								02.指紋整合『○』
									DB整合
										CREATE TABLE IF NOT EXISTS `fingerprint_type` (
										  `uid` int(11) NOT NULL AUTO_INCREMENT,
										  `Name` text,
										  PRIMARY KEY (`uid`)
										) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;

										CREATE TABLE IF NOT EXISTS `fingerprint_list` (
										  `uid` int(11) NOT NULL AUTO_INCREMENT,
										  `PL_uid` int(11) DEFAULT NULL,
										  `CL_uid` int(11) DEFAULT NULL,
										  `FT_uid` int(11) DEFAULT NULL,
										  `Data` text,
										  PRIMARY KEY (`uid`)
										) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;	
										getfingerprint_type();//匯入fingerprint_type
									新增主頁籤(子Sub0400、Sub0401)
										啟用主功能表-指紋管理
										啟用子功能表-指紋管理

								指紋整合
									把原本城市內的UI變數更名並且且重新測試
									新增子頁籤
									CP元件+程式碼		
								授權多一狀態 是否已傳送
								區域要有階層特性，左側DOOR要能停用											
								進階門區的設定UI新增
								二代證專用機串接
								
								
								修正匯入控制器門數啟用數量要和SYDM一致

			


								