日期			版本			內容[啟用測試於否]
2017/12/20		0.1.1.5			01.新增CRC16[還未使用]
								02.新增AES模組[還未使用]
								03.已經可以正確顯示反查授權結果 OK
								04.修改CS2PHPrestfulapi.RESTfulAPI_postBody 讓他可以支援 chunked 收值 OK
								05.使用CS2PHPrestfulapi.RESTfulAPI_postBody測試簡易SQL指令呼叫 OK	PS [String Data=CS2PHPrestfulapi.RESTfulAPI_postBody("http://192.168.1.68:24408/syris/v8/dbservice", "{\"sql_statement\": \"SELECT * FROM Variables;\"}",true);]
								
2017/12/21		0.1.1.6			01.單純PC DB增加SYDM資料表+controller資料表增加`sydm_id` int(11) NOT NULL DEFAULT '0'欄位
								02.修正Models.csv把電梯 128 改成 1 
								
2017/12/22		0.1.1.7			01.在FileLib.CS增加除錯(DEBUG)專用 log函式庫
								02.人和車輛UI在立即配發卡片時利用程式手法直接顯示對應持有人名稱(原本要DB有資料才關聯出來)
								03.修正未在線的控制器匯入無法顯示問題
								
2017/12/25		0.1.1.8			01.修改讀取版本的功能
								02.修改m_StrbutSys_01 變數預設值，預防第一次啟動時等待MYSQL造成系統UI顯示會有閃爍問題(測試->連線)
								03.把卡片UI預設變成一般卡(原本是空值，變相要使用者一定要編輯)
								04.人員/車輛 卡片列表中把NAME改成UID
								05.匯入控制器前把原先state=-1的資料全清空
								06.修正結束時間，不可超過硬體最大時間
								07.修正授權通行時段顯示時的間隔
								
2017/12/26		0.1.1.9			01.卡片資料表全部(id和state除外)匯出
								02.卡片資料表全部(id和state除外)匯入
								03.人員資料表全部(id和state除外)匯出
								04.人員資料表全部(id和state除外)匯入
								05.車輛資料表全部(id和state除外)匯出
								06.車輛資料表全部(id和state除外)匯入
								07.修正部門匯入方法，從一口氣匯入變成單一匯入，預防一筆失敗全部失敗的狀況

2017/12/27		0.1.2.0			01.取消車/人匯出圖片功能和無用欄位
								02.車/人匯入時要有預設部門
								03.卡片內碼元件要能支援C/P
								04.卡片列表UI增加顯示目前卡片列表數量
								05.未知控制器禁止編輯
								
2017/12/28		0.1.2.1			01.修正人/車/卡片 編輯UI 必填欄位的標記提醒
								02.修正人員車輛群組在啟動卡片參數時賦予預設值
								03.修改編修部門UI~製作下拉式選單
								04.修改編修部門UI~部門樹枝狀元件一律展開
								05.修改編修部門UI~ 可支援一個以上的元素拖拉移動
								06.新增人員時部門指向未分類
								07.新增車輛時部門指向未分類
								08.所有表格欄位寬度全部變成可調
								
2017/12/29		0.1.2.2			01.卡片數量計算顯示支援多國語系
								02.MessageBox全部支援多國語系
								03.實作控制器列表過濾電梯和門禁控制器功能
								04.授權查詢不要看到秒

2017/12/30		0.1.2.3			01.時間元件未啟動一律作清空處理
								
2018/01/02		0.1.2.4			01.門區的控制器列表不用列unknown部分	
								02.檢視授權內容的加上周計劃資訊
								03.修改授權運算時間點-只有在執行批次處理『Applied』
								
2018/01/04		指紋模組		01.讓MFC UI程式增加讀取命令參數功能
								02.將設備參數記錄到參數檔案中-調整成員函數等級為了讓APP物件呼叫
								03.將設備參數記錄到參數檔案中-在SDK_DEMO.cpp引用OEM.h
								04.將設備參數記錄到參數檔案中-抓取設備資訊
								05.將設備參數記錄到參數檔案中-增加extern變數
								06.將設備參數記錄到參數檔案中-抓參數不顯示UI
								
2018/01/05		0.1.2.5			01.授權結果列表中顯示卡片類型
								02.授權結果基本資料當式卡片時要顯示卡片類型
								03.修正門群參和門餐合併規則
								04.授權結果/卡片參數 內增加可判斷被影響的機制
								05.修正授權運算-步驟二:卡片參數先和對應授權參數運算

2018/01/07		0.1.2.7			01.顯示授權運算規則UI支援多國語系
								02.呼叫顯示授權運算規則UI

2018/01/08		0.1.2.8			01.修正運算授權結果用Filter方法-宣告對應變數並設定
								02.修正運算授權結果用Filter方法-停用之前演算法
								03.修正運算授權結果用Filter方法-運算函數修正	[50%]-開會後再繼續
								
2018/01/09		0.1.2.9			01.停用最後授權運算-準備製作排程
								02.授權最後一關計算問題整理(20180109).doc
								03.imagelist01元件圖片置換
								
2018/01/10		0.1.3.0			01.imagelist02元件圖片置換
								02.主功能選單增加SYDM
								
2018/01/11		0.1.3.1			01.修正授權紀錄查詢UI的元件展開沒有動畫效果問題
								02.停用授權運算中門區參數當過濾器功能
								03.修正紀錄最後運算結果的資料庫中資料表多增加一個狀態欄位
								04.設定顯示授權運算規則UI 按下OK表示直接建立 授權規則+授權運算，若按下Cancel表示單純建立授權規則
								05.不分是否是撤銷或新增授權在計算通行時段都用加法運算

2018/01/12		0.1.3.2			01.修正隱藏UI功能把SYDM按鈕在切換至台達版也要隱藏		[PS目前該按鈕為實現實際功能]
								02.實作-單純只考慮人群參數+卡片參數和是否合併之前傳送參數的運算結果寫入DB
								03.增加顯示授權結果判斷條件(ad.state > -1)	[PS只顯示 已授權 和 未授權 資料]
								04.修正查詢特定門的所有授權卡時，車卡均無法顯示的問題

2018/01/15		0.1.3.3			01.授權批次處理下拉是選單整合新版運算動作流程
								02.建立傳送授權參數函數	[PS 只建立函數外框和利用註解紀錄實作步驟說明+對應SQL]
																
2018/01/16		0.1.3.4			01.發現A.P.B UI 多國語系變數命名 和 SYDM UI有重疊問題之後會發生錯誤，所以先將A.P.B UI 多國語系變數做相關調整
								02.開發SYDM UI-增加『列表m_tabSub0004』和『編輯m_tabSub000400』頁籤元件
								03.開發SYDM UI-系統預設『列表m_tabSub0004』和『編輯m_tabSub000400』元件基本初始化
								
2018/01/17		0.1.3.5			01.整合呼叫傳送授權API的函數
								02.實作傳送授權參數函數	[完成40%]

2018/01/18		0.1.3.6			01.抓取報表ICON並放入V8專案中
								02.主功能選單增加報表選單
								03.開發報表 UI-『列表m_tabSub0300』頁籤元件
								04.開發報表 UI-系統預設『列表m_tabSub0300』元件基本初始化

2018/01/19		0.1.3.7			01.授權紀錄列表中顯示狀態欄位	[修改UI配置]
								02.授權紀錄列表中顯示狀態欄位	[修改SQL語法]
								03.授權紀錄列表中顯示狀態欄位	[修改顯示資料對應邏輯]
									-1	Not sent-Revoke
									0	sent
									1	Not sent-Authorize
								04.查C#有無免費報表元件

2018/01/20		在VS2015-.net4.0模式下測試報表元件成功
							
2018/01/22		0.1.3.8			01.製作record_status.csv[動態匯入使用]
								02.在MYSQL建立record_status資料表
								03.撰寫把record_status.csv匯入資料庫中

2018/01/23		0.1.3.9			01.增加controller_io_record 資料表到DB中
								02.寫出對應匯入測試資料SQL
								03.寫出撈出基本報表語法
									SELECT u.name AS user_name,c.name AS car_name,cd.display AS card_name,cir.card_unique_identifier AS card_code,rs.name AS state,cir.timestamp AS time
									FROM controller_io_record AS cir 
									LEFT JOIN card AS cd ON cir.card_unique_identifier = cd.card_code 
									LEFT JOIN record_status AS rs ON cir.status = rs.id 
									LEFT JOIN card_for_user_car AS cfuc ON cfuc.card_id = cd.id 
									LEFT JOIN user AS u ON u.id = cfuc.user_id 
									LEFT JOIN car AS c ON c.id = car_id 
								
2018/01/24		0.1.4.0			01.限定查詢卡片的Record SQL	[100%]
									00.沒有限定卡片-不用寫
									01.限定直接輸入卡號- 
										WHERE cir.card_unique_identifier = '判斷資料';
									02.限定某人的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card_for_user_car AS cfuc,card AS cd WHERE (cd.id=cfuc.card_id) AND (cfuc.user_id = '判斷資料') );
									03.限定下拉式選單 單張卡號-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
									04.限定部門下的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card AS cd,department_detail AS dd,card_for_user_car AS cfuc WHERE (cfuc.card_id=cd.id) AND ((dd.user_id=cfuc.user_id) OR (dd.car_id=cfuc.car_id)) AND (dd.dep_id='判斷資料'))
									05.限定部門下的[下拉式選單 單張卡號]-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
									06.限定部門+限定某人的所有卡片-
										WHERE cir.card_unique_identifier IN (SELECT cd.card_code AS card_code FROM card_for_user_car AS cfuc,card AS cd WHERE (cd.id=cfuc.card_id) AND (cfuc.user_id = '判斷資料') );
									07.限定部門+限定某人+限定單張卡號-
										WHERE cir.card_unique_identifier IN (SELECT card_code FROM card WHERE id='判斷資料');
										
------------------------------------[授權65%][報表35%]

2018/01/25		0.1.4.1			01.設計開發報表UI-配置基本元件
								02.設計開發報表UI-撰寫基本事件
								03.設計開發報表UI-卡號元件自動切換
								04.設計開發報表UI-紀錄過濾器開啟狀態

2018/01/26		0.1.4.2			01.設計開發報表UI-報表人/車選擇事件
								02.設計開發報表UI-報表部門選擇事件
								03.設計開發報表UI-所有下拉式選單資料連結

2018/01/27		測試報表元件的相依檔案[01_SQLSysClrTypes、02_ReportViewer]
								
2018/01/29		0.1.4.3			01.設計開發報表UI-執行產生報表
								02.設計開發報表UI-卡片內碼元件要能支援C/P
								03.設計開發報表UI-卡片內碼防呆限制
								
2018/01/30		0.1.4.4			01.新增SYCG模式切換模式
								02.修正本地端資料庫結構 [按照WEB DB]
								03.修正儲存系統設定檔按鈕功能
								04.紀錄 HW_Net_API[SYDM API]、CS2PHPrestfulapi[實際執行API呼叫的函數類別]

------------------------------------[授權65%][報表75%][SYCG UI 20%]

2018/01/31		0.1.4.5			01.增加連接SERVER DB元件
								02.增加外部SERVER測試函數
								03.抓下SERVER上MySQL的資料-config [抓到SYCG的IP:PORT]
								04.修改DB架構
								05.匯入sycg_command

2018/02/01		0.1.4.6			01.修改DB架構
								02.製作SYDM列表UI-擺放元件+變數命名
								03.製作SYDM列表UI-製作多國語系
								04.從 DB 設定 SYCG Domain URL
								05.製作SYDM列表UI-製作SYDM匯入功能
								06.製作SYDM列表UI-新增SYDM功能
								07.製作SYDM列表UI-編輯SYDM功能
								
2018/02/02		分析Delta工具異常畫面問題
					結論1: 沒給SN我的SQL 搜尋會出現重複資料，這一部分只要改SQL就可以防堵沒給SN重複顯示 -> GROUP BY c.id
					結論2: 沒給SN 我會無法取得	sydm 的 id值 也不能用我的程式來做後續設定+控制
					
2018/02/02		0.1.4.7			01.製作SYDM編輯UI-擺放元件+變數命名
								02.製作SYDM編輯UI-製作多國語系
								03.製作SYDM編輯UI-串接本地端資料庫
								04.製作SYDM編輯UI-串接增加SYDM API+ReLoad SYDM API
								
2018/02/05		0.1.4.8			01.製作SYDM編輯UI-串接修改SYDM API+ReLoad SYDM API
								02.開會確定 匯入控制器功能的 KEY值從原本的SN->IP+PORT+MODE

2018/02/06		0.1.4.9			01.修改控制器匯入邏輯
									I.抓取控制器拓譜
										II.一次性(依序)抓取CONTROLLER(MAPPING--IP+PORT+MODE) 且更新現有SN的值
											PS
											a.MAPPING--IP+PORT+MODE
												IP->connection.address
												PORT->connection.port
												MODE->connection.mode
											b.且更新現有SN的值(SQL)
												SN->status.serial_number										
								02.修正控制器列表增加防堵沒給SN重複顯示 -> GROUP BY c.id
								03.修正Getsy_dm_Controller_id 函數和相關呼叫點
									I.修正函數
									II.修正呼叫點相關
								04.修正匯入電梯控制器時門區數量必須利用程式指定
				
2018/02/07		0.1.5.0			01.匯入控制器門區部分DBBUG修正-只有在非電梯控制器下自動增加門區
								02.匯入控制器門區部分DBBUG修正-只有在電梯控制器下自動增隱藏樓層
								03.製作TOOL模式移除報表相依元件SOP
									I.複製目前最後版本程式專案檔餅開啟編輯
									II.刪除Sub0300UI.cs內initSub0300UI()和SetrptSub0300()函數內容保留空殼+元件引用
									III.刪除畫面元件
									IV.刪除參考元件
									V.刪除Main_Frm.cs內的餘孽 - this.rptSub0300.RefreshReport();
									VI.重新編譯執行檔
------------------------------------[控制器管理擴展成多SYDM架構 10%][修改控制器匯入邏輯-使用IP+PORT+Mode作為唯一KEY 100%][匯入控制器門區部分DBBUG修正 100%][TOOL模式移除報表相依元件 100%][SYDM 管理UI+API呼叫 100%]									
								04.修正門區設定值與API定義一致(EX:開放通行與禁止通行，...)
									I.DB門區UI紀錄[0都不選 1開放 2禁止] <-> API(Set Door Setup)enabled[0: 停用，1: 啟用。] ~ API->DB(1->1,other->2);DB->API(1->1,other->0)
									II.密碼字串補F機制

*****************
PS-之後開始加註
『○』-SYRIS 
『●』-Delta
*****************

2018/02/08		0.1.5.1			01.輸出 Delta TOOL 給政璋『●』
								02.製作 V8 workstation_delta_release note.txt『●』
------------------------------------輸出Delta TOOL								
								03.新增SYDM授權用JSON類別-ControllerAuthorization.cs
								04.IP轉換函數32位元版-允許負數[符合SYDM-API規範]
									測試碼:
										String StrIP = "192.168.10.200";
										int intIP = 0;
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "127.0.0.200";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "1.0.0.0";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "255.255.255.255";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);								
								05.修正所有API內有關IP的運算公式變成32位元版-允許負數	『○』『●』
								06.20180208-新舊controller_io_record比較整理 [還未修改本地DB]
								
2018/02/09		0.1.5.2			01.把所有 SYDM API 中 address 和 serial_number 資料型態設定為 Int64	『○』『●』
								02.把IP轉換函數從32位元版改回64位元版-不允許有負數 『○』『●』
									驗證用程式區塊
										String StrIP = "192.168.10.200";
										int intIP = 0;
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "127.0.0.200";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "1.0.0.0";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "255.255.255.255";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = "192.168.1.190";
										intIP = HW_Net_API.ip2long32(StrIP, true);
										StrIP = HW_Net_API.long2ip32(intIP, true);
										StrIP = HW_Net_API.long2ip(intIP, true);
										long lngIP = HW_Net_API.ip2long(StrIP, true);								
								03.修正本地端DB-controller_io_record的資料結構 『○』
								04.確認比對新controller_io_record的資料結構並修正原本寫好的報表產生程式 『○』
									I.目前使用的關聯欄位:
										timestamp[控制器事件發生當下時間]
										card_unique_identifier[卡片內碼]
										status[控制器事件代號]
									II.把測試資料作適度修正方便程式驗證
										UPDATE controller_io_record SET card_unique_identifier='0000000000001001' WHERE card_unique_identifier='0000000017CD8BFA';# 影響了 709 行。
										UPDATE controller_io_record SET card_unique_identifier='9494949494949494' WHERE card_unique_identifier='2003000033110100';# 影響了 3 行。
										UPDATE controller_io_record SET card_unique_identifier='0000000000001005' WHERE card_unique_identifier='00803118C2364E04';# 影響了 294 行。
									III.修正SQL語法預設用卡號+時間排序 ORDER BY cir.card_unique_identifier,cir.timestamp
										SELECT u.name AS user_name,c.name AS car_name,cd.display AS card_name,cir.card_unique_identifier AS card_code,rs.name AS state,cir.timestamp AS time FROM controller_io_record AS cir LEFT JOIN card AS cd ON cir.card_unique_identifier = cd.card_code LEFT JOIN record_status AS rs ON cir.status = rs.id LEFT JOIN card_for_user_car AS cfuc ON cfuc.card_id = cd.id LEFT JOIN user AS u ON u.id = cfuc.user_id LEFT JOIN car AS c ON c.id = car_id ORDER BY cir.card_unique_identifier,cir.timestamp;
								
2018/02/11		20180211-home note.txt								
								authorization_data-calculate_saveDB()
									回圈01-依序取出卡資料
										回圈02-依序取出門資料
											取出DB-先前派送 [db_AnsData]
										
									ANS->運算後的結果	門VS卡

								==========================================

								authorization_data-sendData2HW()
									找出第一筆狀態非0的資料 並記錄卡ID+門ID
									從門ID找出對應控制器[controller_model,Strcontroller_sn,Strcontroller_IP,Strconnetction_mode]
										在從控制器找出所有下面的門ID
											在透過所有門ID(N個)+卡ID(1個) 找出有記錄的『門VS卡((N個))』的授權資料-AL_AnsData
											
									未實做  把『門(N個)VS卡』-> 『控(1個)VS卡』									
								
2018/02/12		0.1.5.3			01.增加sendData2HW()中controller_Port的抓取-呼叫Getsy_dm_Controller_id需要使用
								02.sendData2HW()中增加門參整合用變數
								03.sendData2HW()中增加計算那些門或那些樓層可通行的flag
								04.把資料從『門(N個)VS卡』-> 『控(1個)VS卡』
								05.AnsAuthorization指定SYDM控制器ID-呼叫Getsy_dm_Controller_id					

2018/02/13		0.1.5.4			01.sendData2HW()中增加抓取卡片內碼+卡片display+卡片pin_code+卡片效期+卡片APB
								02.AnsAuthorization指定APB參數
								03.AnsAuthorization指定display_text參數
								04.AnsAuthorization指定pin_code參數
								05.AnsAuthorization指定valid_start_timestamp+valid_endle_timestamp參數
								06.增加ControllerDelAuthorization類別
								07.授權物件轉JSON字串
								08.授權JSON字串存檔(紀錄最後一次)『○』
								09.修改sendData2HW()中搜尋還未派送的授權資料
								10.SYDM控制器授權API呼叫『○』
								11.修正DB派送授權的紀錄狀態語法讓DB支援派送失敗也可復原狀態值
								
2018/02/14		0.1.5.5			01.修改EndPoint,程式內所有 /syris/v8字串替換成/syris/sydm	『○』『●』
																
2018/02/20		用Uniform Server模擬 遠端DB SERVER

2018/02/21		0.1.5.6			01.增加資料庫欄位名稱替換類別
								02.在MySQL.cs中的External_MySQL類別中增加
								03.修正本地端資料庫結構-user表增加emp_title欄位『○』
								04.在MySQL.cs中的External_MySQL類別中增加 DownloadDBTable()/UploadDBTable()函數 『○』
									測試用程式碼:
										External_MySQL m_ExMySQL = new External_MySQL();
										bool blnAns = m_ExMySQL.CheckMySQL("127.0.0.1", "3306", "root", "usbw");
										blnAns = m_ExMySQL.DownloadDBTable("controller_io_record", "REPLACE INTO", true);
										blnAns = m_ExMySQL.DownloadDBTable("card", "REPLACE INTO", true);
										blnAns = m_ExMySQL.UploadDBTable("card", "REPLACE INTO", true);
										
										m_ExMySQL.m_ALReplaceField.Clear();
										ReplaceField RF_Data01 = new ReplaceField();
										RF_Data01.StrOldField = "`name`, `alias_name`";
										RF_Data01.StrNewField = "`real_name`, `alias_name`";
										m_ExMySQL.m_ALReplaceField.Add(RF_Data01);
										ReplaceField RF_Data00 = new ReplaceField();
										RF_Data00.StrOldField = "`user_name`, `password`";
										RF_Data00.StrNewField = "`name`, `password`";
										m_ExMySQL.m_ALReplaceField.Add(RF_Data00);
										blnAns = m_ExMySQL.UploadDBTable("user", "REPLACE INTO", true);

										m_ExMySQL.m_ALReplaceField.Clear();
										RF_Data01.StrOldField = "`real_name`, `alias_name`";
										RF_Data01.StrNewField = "`name`, `alias_name`";
										m_ExMySQL.m_ALReplaceField.Add(RF_Data01);
										RF_Data00.StrOldField = "`name`, `password`";
										RF_Data00.StrNewField = "`user_name`, `password`";
										m_ExMySQL.m_ALReplaceField.Add(RF_Data00);
										blnAns = m_ExMySQL.DownloadDBTable("user", "REPLACE INTO", true);
								05.Remote/Local DB 人員匯入/匯出 『○』
								06.User資料匯入時會沒有填生日的狀況BUG修正 『○』
								
2018/02/22		0.1.5.7			01.Remote/Local DB Tabe 匯入/匯出整理
								02.Remote/Local DB other 匯入/匯出 『○』
								03.修正IP 196 上的 authorization_data 資料表結構 『○』
								
2018/02/23		0.1.5.8			01.修改 控制器編輯UI 增加SYDM選項元件 『○』
									利用程式切換 控制器編輯UI SYDM元件顯示狀態
									SYDM 選擇元件資料初始化
									SYDM 選擇元件 修改偵測
									SYDM 選擇元件在指定控制器時顯示對應值
									修改 儲存控制器時支援 SYDM 選擇元件

2018/02/25		20180225-note

2018/02/26		0.1.5.9			01.按照hino調整Remote DB user Table的現況 調整 自己 Local DB (修正本地端資料庫結構) 『○』
								02.SYCG模式下-建立/暫存 當下要操作的SYDM ID
									-X  授權時還未有正確解
								03.開發呼叫SYCG API函數
									按照命令名稱轉換成命令數字值
									設定SYDM編號
									
2018/02/27		0.1.6.0			01.開發呼叫SYCG API函數
									產出對應輸入參數框架
									執行呼叫API
									API呼叫結果拆解框架
------------------------------------[Remote/Local DB 資料表資料交換功能 100%][控制器編輯UI 增加SYDM選項元件 100%][開發呼叫SYCG API函數 50%]

2018/02/28		0.1.6.1			01.SYDM和SYCG API呼叫並存實現『○』
									SYCG_setSYCGDomainURL,setAPIDomainURL,OK
									SYDM_GET_CONTROLLER,getController,OK
									SYDM_GET_CONTROLLER_CONNECTION,getController_Connection,OK

2018/03/01		0.1.6.2			01.SYDM和SYCG API呼叫並存實現『○』
									SYDM_GET_CONTROLLER_ACTIVE,getController_Active,OK
									SYDM_SET_CONTROLLER_ACTIVE,setController_Active,OK
									SYDM_LOAD_CONTROLLER,load_All_Controller,OK
									SYDM_SET_CONTROLLER_APB_AB_DOOR,setController_Apb_Ab_Door,OK
									SYDM_SET_CONTROLLER_HOLIDAY,setController_Holiday,OK
									SYDM_SET_CONTROLLER_SETUP,setController_Setup,OK
									SYDM_SET_CONTROLLER_CONNECTION,setController_Connection,OK
									SYDM_ADD_CONTROLLER,add_Controller,OK
									SYDM_GET_CONTROLLER_STATUS,getController_Status,OK
									SYDM_GET_DOOR_TOPOLOGY,getDoorTopology,OK
									SYDM_GET_DOOR_SECURITY,getDoorSecurity,OK
									SYDM_GET_DOOR_SETUP,getDoorSetup,OK
									SYDM_GET_DOOR_TIME_PERIOD_CONTROL,getDoorTimePeriodControl,OK
									SYDM_GET_DOOR_AUTO_OPEN_TIME_PERIOD_CONTROL,getDoorAutoOpenTimePeriodControl,OK
									SYDM_SET_DOOR_SECURITY,setDoorSecurity,OK
									SYDM_SET_DOOR_SETUP,setDoorSetup,OK
									SYDM_SET_DOOR_TIME_PERIOD_CONTROL,setDoorTimePeriodControl,OK
									SYDM_SET_DOOR_AUTO_OPEN_TIME_PERIOD_CONTROL,setDoorAutoOpenTimePeriodControl,OK

2018/03/02		0.1.6.3			01.SYCG測試連線時要按照測試結果修改下方方下拉式選單狀態		
								02.SYCG模式下測試SYDM匯入-有連線/無連線-OK
								03.SYCG模式下測試控制器匯入-有連線/無連線-OK
								04.SYCG模式下DB匯入匯出功能UI實作『○』
								

2018/03/04		0.1.6.4			01.再檢查一次DB 匯入/匯出 TABLE 清單+帳密是否正確
								02.匯入控制器在SYCG模式下要紀錄指定SYDM變數-m_ALSYDMid 『○』
								
2018/03/05		0.1.6.5			01.SYCG模式下匯入控制器API整合測試完成『○』
								02.SYCG模式下編輯控制器API整合測試完成『○』
								03.SYCG模式下新增控制器API整合測試完成『○』
								04.SYCG模式下載入門區參數API整合測試完成『○』
								05.SYCG模式下寫入門區參數API整合測試完成『○』
								06.SYCG授權傳送模式『○』
									新增一個ArrayList紀錄CONTROLLER的SYDM ID
								07.SYCG模式下授權參數API整合測試完成『○』
								08.DB匯出到IP-78測試

2018/03/06		0.1.6.6			01.CS2PHPrestfulapi 傳送全部改為UTF8 『○』
									使用[C# 傳送JSON給PHP API並等待PHP長時間運算並接收運算結果]模擬確定中文沒亂碼
								02.建立UploadDB_door()和 DownloadDB_door() 為了讓上傳資料符合HINO原先規劃『○』

2018/03/07		0.1.6.6			
--------------------------------輸出Delta TOOL
									0.1.5.5			01.修改EndPoint,程式內所有 /syris/v8字串替換成/syris/sydm	『○』『●』
									0.1.5.6			01.修改本地端資料庫架構	
--------------------------------輸出TOOL
--------------------------------輸出SYDM-Workstation
--------------------------------輸出SYCG-Workstation								

2018/03/07		0.1.6.7			01.修改匯入config的DB函數 不刪除BAT和config.sql『○』
								02.編譯SYCG/SYDM不同版本時抬頭要跟著改變『○』『●』
--------------------------------[Remote/Local DB 資料交換100%][SYDM模式授權100%][SYCG/SYCG模式API整合100%]
								
2018/03/08		0.1.6.8			01.設定C# 跨執行緒(thread)存取UI『○』『●』
								02.系統頁面連線測試變成有等待動畫『○』『●』
									SYCG等待動畫
									SYDM等待動畫
								03.Remote/Local DB 資料交換變成有等待動畫『○』
									DB匯入
									DB匯出
								04.調整系統設定頁面的TabIndax『○』『●』
								05.把設定檔案副檔名從CSV變成SET『○』『●』
									sycg_command.csv->sycg_command.set
									record_status.csv->record_status.set
									card_type.csv->card_type.set
									Models.csv->Models.set
								06.V8_Windows_Workstation安裝包『○』
								07.SYDM匯入變成有等待動畫『○』
								
2018/03/09		0.1.6.9			01.SYCG模式下新增控制器一定要有SYDM的防呆機制『○』
								02.控制器列表UI顯示SYDM名稱『○』
								03.重寫get_show_Controllers函數(藉此提升UI使用感覺) [先把原本函數更名成get_show_Controllers_at20180309 預防重寫失敗] 『○』『●』
									cleandgvSub0000_01()
									getDBControllerShowData()
									public static void Thread_getControllerStatus(object arg)
								04.重寫匯入控制器按鈕變成有等待動畫程式『○』『●』
									
									
2018/03/11		0.1.7.0			01.授權結束要有對話盒『○』
									修正傳送授權內容到紀錄文字檔符合SYDM/SYCG兩種模式
									修改語系檔新增對話盒文字
								02.get_show_Controllers(false)『○』『●』
									增控制器後要能更新控制列表
									批次作業要能更新控制列表

2018/03/12		0.1.7.1			01.修正匯入SYDM前必須確定SYCG的URL『○』
--------------------------------
系統頁面連線測試變成有等待動畫[100%]
Remote/Local DB 資料交換變成有等待動畫[100%]
SYDM匯入變成有等待動畫[100%]
把設定檔案副檔名從CSV變成SET[100%]
控制器列表UI顯示SYDM名稱[100%]
重寫匯入控制器按鈕變成有等待動畫程式[100%]
授權結束要有對話盒提示[100%]
控制器列表頁面改成非每次進入都執行控制器的連線狀態抓取[100%]

2018/03/13		0.1.7.2			01.連線按鈕需要能有顏色識別上次連線狀態『○』『●』
								02.SYDM編輯要能停用/啟用 『○』
								03.所有表格支援多國語系(25%)『○』『●』
									控制器列表多國語系
									APB管理列表多國語系
									區域門區群組列表多國語系
									SYDM列表多國語系								

2018/03/14		0.1.7.3			01.門區參數UI增加新設定區塊-無法通行警報(40%)『○』『●』
									調整UI+擠出空間
									放上對應元件並且重新命名
									支援多國語系
									指定音效下拉選單
									UI啟用鎖定事件
									驗證在Delta模式的UI顯示
									
2018/03/15		0.1.7.4			01.門區參數UI增加新設定區塊-無法通行警報(100%)『○』『●』		
									修改本地資料庫中door_extend表新增三個欄位-access_den、black_me、suspend
									撰寫door_extend表中access_den欄位的相關程式碼
--------------------------------輸出Delta TOOL									
								
2018/03/16		0.1.7.5			01.修改資料庫結構 `controller_io_record` 『○』『●』
								02.修正報表主選單頁面語系切換BUG 『○』
								03.下載指定時間報表資料 『○』(沒指定時間就會全部下載)
									https://stackoverflow.com/questions/935556/mysql-dump-by-query
									http://blog.csdn.net/xin_yu_xin/article/details/7574662
									https://stackoverflow.com/questions/26261670/mysqldump-with-where-clause-is-not-working
									實際測試會動語法:
										mysqldump.exe -h127.0.0.1 -P3307 -uroot -pusbw -t -e -q --complete-insert --extended-insert=FALSE --default-character-set=utf8 --hex-blob v8_workstation controller_io_record --where="537811566<= timestamp AND timestamp<=574445166" > controller_io_record_00.sql
										mysqldump.exe -h127.0.0.1 -P3307 -uroot -pusbw -t -e -q --complete-insert --extended-insert=FALSE --default-character-set=utf8 --hex-blob v8_workstation controller_io_record --where="546955202<= timestamp AND timestamp<=571255622" > controller_io_record_01.sql
										pause
								04.修改資料庫結構 `user` 資料表的 emp_title 拿掉了 『○』『●』
								05.APB管理要分成SYDM/SYCG兩種模式
									增加SYDM選擇元件
									SYDM 選擇元件資料初始化
									SYCG/SYDM模式下SYDM ID綁定程式
									
2018/03/19		0.1.7.6			01.控制器為TCP SERVER要顯示為預設『○』『●』
								02.所有表格支援多國語系(100%)『○』『●』
									人員列表多國語系
									人員編輯內的卡片列表多國語系
									控制器編輯內的假日列表多國語系
									APB編輯內列表多國語系								
									區域門區群組編輯內列表多國語系
--------------------------------輸出SYDM-Workstation-v0.1.7.6.exe
									車輛列表多國語系
									車輛編輯內的卡片列表多國語系
									卡片資料列表多國語系
									人員車輛群組列表多國語系									
									人員車輛群組編輯內列表多國語系									
									授權記錄列表多國語系									
									授權記錄編輯內列表多國語系
									授權記錄查詢列表多國語系
								03.換ICON 為了能在XP上執行『○』

2018/03/20		0.1.7.7			01.替換MYSQL的EXE-mysql.exe、mysqldump.exe為了能在XP上執行『○』 (來源:xampp-win32-1.8.3-5-VC11.zip)
								02.確認只有在SYCG模式才能有DB匯入匯出和報表功能『○』
--------------------------------輸出SYCG-Workstation-v0.1.7.7.exe
--------------------------------輸出SYDM-Workstation-v0.1.7.7.exe
				0.1.7.8			03.修正BUG-get_show_Controllers必須支援系統頁面的操作模式選項『○』
								04.SYCG/SYDM模式 IP/PORT文字切換『○』『●』
--------------------------------輸出SYCG-Workstation-v0.1.7.8.exe
--------------------------------輸出SYCG-Workstation-v0.1.7.8.exe

2018/03/21		0.1.7.9			01.修正BUG-無法顯示門區設定(增加access_den值)『○』『●』
								02.按下門區儲存時中時把UI值存到DB就算沒有啟動也不要回覆預設值，停用「Sub000100_getUIValue」『○』『●』
--------------------------------輸出SYCG-Workstation-v0.1.7.9.exe
--------------------------------輸出SYCG-Workstation-v0.1.7.9.exe
--------------------------------輸出Delta TOOL
				0.1.8.0			01.程式標題改成『Workstation [for SYDM]- V版號』『○』
--------------------------------輸出SYCG-Workstation-v0.1.8.0.exe
--------------------------------輸出SYCG-Workstation-v0.1.8.0.exe
--------------------------------
連線按鈕需要能有顏色識別上次連線狀態[100%]
SYDM編輯要能停用/啟用[100%]
所有表格支援多國語系[100%]
門區參數UI增加新設定區塊-無法通行警報[100%]
修改資料庫結構[100%]
修正報表主選單頁面語系切換BUG[100%]
下載指定時間報表資料[100%]
APB管理要分成SYDM/SYCG兩種模式[100%]
控制器為TCP SERVER要顯示為預設[100%]
替換MYSQL的EXE-mysql.exe、mysqldump.exe為了能在XP上執行[100%]
修正BUG-get_show_Controllers必須支援系統頁面的操作模式選項[100%]
修正BUG-無法顯示門區設定(增加access_den值)[100%]

2018/03/22		0.1.8.1			01.人員工號改必填『○』
									增加必填星號標記
									增加必填防呆偵測
								02.指紋整合『○』
									DB整合
										CREATE TABLE IF NOT EXISTS `fingerprint_type` (
										  `uid` int(11) NOT NULL AUTO_INCREMENT,
										  `Name` text,
										  PRIMARY KEY (`uid`)
										) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;

										CREATE TABLE IF NOT EXISTS `fingerprint_list` (
										  `uid` int(11) NOT NULL AUTO_INCREMENT,
										  `PL_uid` int(11) DEFAULT NULL,
										  `CL_uid` int(11) DEFAULT NULL,
										  `FT_uid` int(11) DEFAULT NULL,
										  `Data` text,
										  PRIMARY KEY (`uid`)
										) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;	
										getfingerprint_type();//匯入fingerprint_type
									新增主頁籤(子Sub0400、Sub0401)
										啟用主功能表-指紋管理
										啟用子功能表-指紋管理
								03.修改門區設定值未啟用時的抓取運算規則，而非停用「Sub000100_getUIValue」『○』『●』
								
2018/03/22		0.1.8.2			01.修正當SYCG沒插KEY時雖然API會有回應，但是回應內容會是亂碼非JSON格式，導致系統死當問題『○』『●』
--------------------------------輸出Workstation[SYCG]-V0182.exe
--------------------------------輸出Workstation[SYDM]-V0182.exe
2018/03/23		0.1.8.3			01.把系統設定的模式元件改成只純顯示
								02.把下載報表資訊的指定時間元件切開
								03.換ICON
								04.連線狀態元件換成純文字顯示
								05.APB和門區 群組 UI 元件擺放修改							
--------------------------------輸出Workstation[SYCG]-V0183.exe
								
2018/03/24		0.1.8.4			01.修正APB下方頁籤文字載入錯誤『○』『●』
								02.調整報表元件結束時間為23:59『○』
--------------------------------輸出Workstation[SYCG]-V0184.exe								
								03.撰寫獨立的縮圖程式CS_cmd_ImageResize準備整合測試
								
2018/03/26		0.1.8.5			01.整合縮圖函數『○』『●』
								02.將設定檔變成語系檔內容『○』『●』
									card_type.set
									fingerprint_type.set
									Models.set
									record_status.set
								
2018/03/27		0.1.8.6			01.修改「將設定檔變成語系檔內容」分割符號從「;」變「$」『○』『●』
								02.解決卡片列表過濾條件失效問題『修正卡片資料-每次顯示列表時把已經被領用過的卡片資料變回預設值』『○』
									"SELECT id FROM card WHERE (type>0) AND (id NOT IN (SELECT card_id AS id FROM card_for_user_car) );"
								
				0.1.8.7			03.控制器過濾器要有作用『○』『●』
								04.停用-解決卡片列表過濾條件失效問題『修正卡片資料-每次顯示列表時把已經被領用過的卡片資料變回預設值』『○』
								05.解決卡片列表過濾條件失效問題『○』
								06.修改報表元件標題『○』

2018/03/29		0.1.8.8			01.修改DB結構(為了配合HINO WEB新功能)『○』『●』
									USER 欄位增加
										username		varchar(255)	utf8_unicode_ci		not null [工號值]
										password		longtext	utf8_unicode_ci   		not null [Base64(MD5(工號值))]
										auth_group_id	int(11)					 			2
										del	            int(11)								0
								02.撰寫WEB密碼專用加密類別-Web_encrypt.cs
								03.人員UI身分證號不用必填『○』
									labSub010000_22元件[*]不用顯示
								04.新增人員時可修改USER 工號但在編輯時禁止修改『○』
								05.人員UI移除身分證號為必填欄位判斷機制『○』
								06.人員UI增加DB填入帳密功能『○』
								07.人員UI工號欄位判斷不能重複『○』
								08.人員UICSV匯出/匯入功能修改『○』
								09.USER DB匯出/匯入功能修改『○』
								10.新增車輛時可修改[車牌]欄位但在編輯時禁止修改『○』
								11.車輛必填欄位偵測『○』
								12.車輛UI[車牌]欄位判斷不能重複『○』
								13.指紋整合
									把原本程式內的UI變數更名並且重新測試									
								
2018/03/30		0.1.8.9			01.修正門區群組UI儲存按鈕顯示BUG『○』『●』
								02.修正APB群組UI儲存按鈕顯示BUG『○』『●』
								03.修改DB結構(為了記錄指紋機的機型種類)『○』『●』
								04.修正人員匯入無法指定預設部門BUG『○』

2018/04/02		0.1.9.0			01.FileLib.DeleteFile("temp.png");//徹底刪除人員車輛照片暫存檔-2018/04/02防呆用『○』
									新增/編輯 人員
									新增/編輯 車輛
									取的人員/車輛 列表函數
								02.顯示控制器狀態燈號說明Tip『○』『●』
									顯示文字在語系檔之中
								03.人員列表增加一個欄位顯示領卡數量『○』
									語系檔有改
								04.人員列表隱藏身分證號『○』
								05.車輛列表隱藏Status欄位『○』
								06.車輛批次處理也把Status欄位相關刪除『○』

2018/04/03		0.1.9.0			01.車輛列表一個欄位顯示領卡數量『○』
									語系檔有改
								02.匯入控制器時要能自動產生door_extend(防止授權沒資料可用)『○』
								03.修正授權結果查詢時間參數顯示BUG(SetSub020300UIVar)『○』
								04.授權紀錄顯示時，基本資料有效期欄位顯示控制『○』
								05.增加程式只能執行一次的功能『○』『●』
								06.修正卡片內碼重複會沒反應的BUG『○』
								07.新建授權紀錄時，預設"不勾選授權參數啟用"、"授權群組頁面縮起"『○』
								
2018/04/09		0.1.9.1			01.按照政樟要求修改繁體中文版的語系檔『○』『●』
								02.指紋整合
									把指紋機型號(FD_model.set)寫入資料庫中(FD_models)
									新增抓取指紋子頁籤
										預設隱藏頁籤
								03.在m_tabSub0400貼上對應UI元件
								04.修正指紋功能只在非Delta下啟用
								05.FingerprintSQL2UI_DataStruct.cs
									包含:class Combo_SQLite_Date
									包含:class Fingerprint_SQLite_Date
								06.CP指紋相關的全域變數+相關運算函數	
								
2018/04/10		0.1.9.1			01.修正防止匯入控制器時，未在線的控制器SN太長導致SN都相同BUG『○』『●』
								02.指紋相關的全域變數初始化
								03.整合顯示指紋內碼的UI-Fingerprint.cs
								04.抓取指紋的UI元件內資料設定
									讀取放在DB內有關語系的資料
									設備連線方式下拉式選單元件值設定
									隱藏指紋抓取設備連線方式的UI元件
									建檔手指下拉式選單元件值設定
									部門的下拉式選單元件值設定
									人員的下拉式選單元件值設定
								05.抓取指紋的UI元件事件整合
									下拉式選單連動事件
									10個圖片點擊顯示指紋內碼
									
2018/04/11		0.1.9.1			01.控制器列表的unknown列SN也要加上unknown-『○』『●』
--------------------------------輸出Delta TOOL								
								
2018/04/12		0.1.9.1			01.查小郭用V1090-SYDM 為何新增單們控制器會顯示斷線問題(小郭用副總工具連線正常)
									-我請小郭用Insomnia呼叫 SYDM API 的 Get Controller Status 中 "is_connected": 0 ，所以再轉請羅哥接手處理，最後副總修改韌體
								02.指紋抓取整合[只在SYCG模式下啟用該功能]『○』
									調整UI對期
									抓取指紋UI多國語系製作
									呼叫抓取指紋EXE
									把指紋寫入DB
								03.修正載入線上門區資訊 按鈕沒有多國語系BUG『○』『●』
								04.修正控制器的refresh按鈕要沒有多國語系BUG『○』『●』
								05.修正新增區域的對話盒沒有多國語系BUG『○』『●』
								06.修正新增區域的對話盒沒有多國語系BUG『○』
								
2018/04/13		0.1.9.1			01.確認只有在SYCG模式才能有DB匯入匯出和報表功能+指紋功能『○』
--------------------------------輸出Workstation[SYCG]-V0191.exe
--------------------------------輸出Workstation[SYDM]-V0191.exe
								02.指紋指令整理
									//STX       MSG LEN         FLAGS       COMMAND			指紋編號			TYPE			Reserve			UID			Template
									//1 Byte    2 Byte          2 Byte      2 Byte 			4BYTE				2BYTE			2BYTE			8BYTE
									0x05		XXXX			0x800x00	0x060x11		
								
2018/04/16		0.1.9.2			01.檔案描述加上版號資訊『○』『●』
								02.隱藏SYCG燈號『○』
								03.在V0191來除錯為何連線到政璋WINDOWS SYCG[192.168.1.61] 可以抓到控制器狀態卻無法執行授權
									●開DEBUG模式來記錄授權 API呼叫過程與結果
										API回傳結果:
											{"detachment_total_counter":1,"detachment_failed_counter":0}
											{"identifier":1,"message":{"detachment_total_counter":1,"detachment_failed_counter":0}}
											{"identifier":1,"message":{"identifier":1,"card_unique_identifier":"0000368911450628","door_accessable_flags":1,"result":2}}
											{"identifier":1,"message":{"result":1}}
											{"identifier":1,"result":0}
											{"result":0}
										傳送內容:
											{"sydms": [{"identifier": 1,"command": 122,"message":{"authorizations":[{"identifier":1,"door_accessable_flags":1,"card_unique_identifier":"0000368911450628","apb_enabled":1,"apb_level_value":1,"display_text":"車票","pin_code":"FFFFFFFFFFFFFFFF","valid_start_timestamp":567561600,"valid_endle_timestamp":2145916800,"floor_flags_list":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"authorized_configuration_list":[{"card_type":1,"card_level":1,"card_in_black":0,"card_disabled":0,"week_plan_flags":127,"time_range_list":[{"start_timestamp":0,"endle_timestamp":86340},{"start_timestamp":0,"endle_timestamp":0},{"start_timestamp":0,"endle_timestamp":0}]}]}]}}]}									
									●問羅哥為何會回傳2
										0=GRAP_STATUS_SUCCEEDED, / 成功 /  
										1=GRAP_STATUS_FAILED, / 失敗 /  
										2=GRAP_STATUS_LOCKED, / 鎖定 /  
										3=GRAP_STATUS_LIMIT_VIOLATIONS, / 違反 keypro 限制 /
									●結論:
										SYCG/SYDM 的DB(SQLITE) 無法工作，排除後就正常了
								04.把繁體語系檔替成政璋提供的版本(2018/04/16 16:01)『○』『●』
								05.修正『檢視授權紀錄的門區通行等級顯示錯誤』BUG『○』
								06.原本設計如果傳送授權失敗不記錄傳送內容，現在要改成都要記錄下來授權的JSON，錯誤的在後面加上-ERROR『○』
								07.調整人員OUTLOOK選單的排列位置=部、人、卡、車、群『○』
								08.調整人員工作區選單的排列位置=部、人、卡、車、群『○』
								
2018/04/17		0.1.9.2			01.修正『建立新部門，下拉無新的選項』BUG『○』
								02.修正『輸入重複的卡片內碼，系統僅會顯示紅色字體，應要顯示"重複卡片"提示』BUG『○』
								03.修正『設置卡片，取消勾選時段 2 及時段3，儲存後再進入該張卡片。時段 2 及時段3 還是會勾選』BUG『○』『●』
								04.修正『相同卡號可重複匯入』BUG『○』
								05.修正『車輛資料管理其中配發卡片的部分，把所有未使用卡片都列出來』BUG『○』
								06.修正『門區授權內容 授權起始日、撤銷日欄位刪除』『○』
--------------------------------輸出Workstation[SYCG]-V0192.exe
--------------------------------輸出Workstation[SYDM]-V0192.exe								
								
2018/04/18		0.1.9.3			實驗 C# datagridview內嵌Button整合測試
								實驗 C# httpwebrequest https 標準存取-單一寫法，另外兩種利用註解方式收藏在程式碼中

2018/04/19		0.1.9.3			實驗 C#呼叫CURL抓取網頁內容測試
								實驗 C# 呼叫 libcurl 函式庫
								實驗 C# httpwebrequest https 標準存取-實作出三種寫法

2018/04/20		0.1.9.3			目前用 httpwebrequest或者libcurl 執行https://192.168.1.68:1111都會失敗或無反應
								使用curl.exe -k https://192.168.1.68:1111會正常
								
2018/04/23		0.1.9.3			01.修正新增區域讀取語系檔BUG『○』『●』					
								02.MySQL SQL查詢語法太複雜(寫太爛)導致系統無法負荷的錯誤訊息 [Fatal error: Maximum execution time of 300 seconds exceeded]『○』
									SELECT u.id AS id,u.emp_no AS jobnum,u.security_id AS s_id,u.name AS name, d.name AS dname,u.attribute AS attribute,u.birthday AS birthday,(SELECT COUNT(*) FROM card_for_user_car WHERE card_for_user_car.user_id=u.id) AS card_count FROM user AS u LEFT JOIN department_detail AS d_d ON ((u.id=d_d.user_id) AND ((d_d.car_id IS NULL) OR (d_d.car_id <1))) LEFT JOIN department AS d ON (d_d.dep_id=d.id) ORDER BY u.id;
									SELECT id AS uid,name AS C_name FROM user WHERE id IN (SELECT user_id AS id FROM department_detail WHERE (car_id IS NULL) AND dep_id=-1 ORDER BY user_id);
									部門編輯也可能要修改
									------------------------
									SELECT u.id AS id,u.emp_no AS jobnum,u.security_id AS s_id,u.name AS name,u.attribute AS attribute,u.birthday AS birthday,(SELECT COUNT(*) FROM card_for_user_car WHERE card_for_user_car.user_id=u.id) AS card_count FROM user AS u ,department_detail AS d_d,department AS d WHERE ((u.id=d_d.user_id) AND ((d_d.car_id IS NULL) OR (d_d.car_id <1))) AND (d_d.dep_id=d.id) ORDER BY u.id;
									SELECT id AS uid,name AS C_name FROM user AS u WHERE EXISTS (SELECT user_id AS id FROM department_detail AS d_d WHERE (u.id=d_d.user_id) AND (d_d.car_id IS NULL) AND d_d.dep_id={0} ORDER BY d_d.user_id);
								03.人員重複匯入防呆機制『○』
								04.車輛重複匯入防呆機制『○』
								05.閱讀SFM SDK文件筆記
									●閱讀資料:
										◎文件:SFM_SDK_Manual_V2.0_rev.pdf
										◎程式:sfm-sdk-dotnet-1.0.6528.18296										
									●連接方式:
										從文件的P13和程式的result = SFM.UF_InitCommPort("COM3", 19200, false);只有RS232方式
									●是否有抓到設備
										從文件的P13					
									●UniFingerUI有提供完整的專案原始碼
										從文件的P13
										1.3.2. Compilation
											Open UniFingerUI\UniFingerUI.dsw in Microsoft Visual C++ 6.0 or later. If you download and install HTML Help Workshop, changes the include directory and library path accordingly. If you don’t want online help, just select ‘Win32 Debug without Help’ or ‘Win32 Release without Help’ as the active configuration.								
								06.抓取 suprema fingerprint scanner 驅動程式(並且正確驅動設備)
									https://www.supremainc.com/en/content/biostar-1-usbsdk-driver-package
										https://www.supremainc.com/sites/default/files/biostar1_drivers_0_0_0.zip
								
2018/04/24		0.1.9.3			01.人員匯入/匯出CSV功能將[username,password,auth_group_id,del]欄位剔除『○』
								02.人員匯入改成執行緒模式『○』
								03.問政璋那台指紋機抓取指紋使用方法(因為目前設備驅動程式正常之後部不會出現COM PORT)
									結論- 請政璋幫我跟原廠拿UFScanner.dll、UFScanner.lib的SDK資料+.NET範例
								04.20180424指紋SQL.txt
								
2018/04/25		0.1.9.3			01.20180425指紋.sql
								02.因為要讓抓取指紋能和傳送指紋能支援多種設備，因此必須按照「20180425指紋.sql」修改本地端DB結構『○』『●』
								03.修改FD_model.set和新增FD_type.set『○』『●』
								04.修改getFD_model函數『○』『●』
								05.新增getFD_type函數『○』『●』
--------------------------------輸出Workstation[SYCG]-V0193.exe

2018/04/26		0.1.9.4			01.重新製作抓取指紋的UI介面[25%]
									修改設備種類下拉是選單-只支援DB內fd_type設備清單『○』
									修改抓取指紋設備種類判斷方式『○』
									修改指紋儲存方式『○』
									撰寫新版指紋儲存函數SaveFingerprint在正確抓取織紋之後寫入DB之中『○』
									
2018/04/27		0.1.9.4			01.重新製作抓取指紋的UI介面[50%]
									修改指紋dgv元件再產生顯示資料和SQL查詢的程式碼要獨立分離，也就是先把SQL資料存入記憶體之中，防止因事件觸發在此SQL還未執行結束前而又執行下一SQL產生的BUG『○』
									修改getCardInfo函數讓該函數具有指定設備下拉式選單的功能『○』
									指紋UI可以新增卡片功能『○』
								
2018/04/30		0.1.9.4			01.要有紀錄最後一次抓指紋的使用機型功能，下次顯示時要能自動提醒『○』
								02.反脅迫規劃進去到fingerprint_list資料表之中『○』『●』
								03.指紋UI支援反脅迫欄位『○』
								04.『V8指紋命令P25.pdf』+『V8CommandTools_SW_V0822_20180430.rar』可以看出和測試[指紋反脅迫]功能
								
2018/05/02		0.1.9.4			01.重新製作抓取指紋的UI介面[75%]
									隱藏顯示指紋特徵碼UI『○』
									移動dgvSub0400_00元件蓋在顯示指紋特徵碼UI『○』
									移動下拉式選單UI『○』
									增加新的語系內容『○』
								02.了解Suprema 的指紋存取方式
									安裝SDK+原本驅動程式
									使用SDK範例+VS2015在安裝位置下可以正常編譯
								
2018/05/03		0.1.9.4			01.重新製作抓取指紋的UI介面[100%]
									人員指紋列表-資料顯示『○』
									人員指紋列表-選擇改變時，其他元件資料顯示連動改變『○』
									刪除指紋按鈕『○』
									新增/修改指紋時要指定列表的選擇位置『○』
								02.了解Suprema 的指紋存取方式[30%]
									在公司電腦WIN7-X64有安裝SDK+驅動已經可以正確挖出C#和VC的範例程式專案獨立編譯且可執行
									
2018/05/03						01.昨晚在家測試
									只安裝驅動+Suprema範例原始碼是否可以正常編譯，結果:WIN10 X64+VS2015可以正常工作
									只安裝驅動+Suprema範例程式EXE是否可以使用，結果:WIN10 X64可以正常工作
								02.並把它整合道系統30%[55%]
									確定C#版把main函數放在Biomini_Demo.cs中，這和標準的C#專案不同
									確定Start Capturing按鈕式無參數可調整，如果要跟TYPE_B一樣 必須利用TIMER
									已經初步繪製出TYPE A的指紋程式流程圖
								03.修改Biomini_Demo範例(使用TIMER狀態控制法把所有動作變成全自動串聯起來)	
									實現偵測無設備實在Timer中提示錯誤訊息並關閉程式- m_intTimerStep=-1
									建立sysInit()，並在Timer中執行- m_intTimerStep=0
									建立sysStartCapturing()，並在Timer中執行- m_intTimerStep=1
									
2018/05/07		0.1.9.4			01.啟動程式優化-停用所有子TabPage初始化	『○』『●』	
								02.人員列表計數總量顯示	『○』
								03.車輛列表計數總量顯示	『○』
								04.修改人員匯入執行序功能必須要即時進度顯示	『○』
								05.修改人員列表元件要有分頁功能(一次1000筆)	『○』

2018/05/08		0.1.9.4			01.card_type在匯入匯出功能都停用-hino『○』
								02.修改車輛列表的SQL不要用LEFT JOIN『○』
								03.修改車輛匯入要變成執行序模式+即時進度顯示『○』
								04.修改車輛列表元件要有分頁功能(一次1000筆)『○』
								05.修改卡片匯入要變成執行序模式+即時進度顯示『○』
								06.修改卡片列表元件要有分頁功能(一次1000筆)『○』
								07.修正『人員』、『車輛』、『卡片』搜尋功能從原本的畫面搜尋變成DB搜尋
									人員搜尋改成DB語法『○』
									車輛搜尋改成DB語法『○』
									卡片搜尋改成DB語法『○』
									
2018/05/09		0.1.9.4			01.門區/電梯 設置功能順序『○』
									希望:
										基本設置
										開門操作設置
										門位偵測設置
										按鈕開門
										開門逾時控制
										通行設置
										反破壞偵測設置
										無法通行警報
										反脅迫開門
										暴力入侵
										通行模式與時段控制
										自動開門
									結果:
										基本,gpbSub000100_01
										開門,gpbSub000100_04
										門位偵,gpbSub000100_06
										按鈕開門,gpbSub000100_07
										開門逾時,gpbSub000100_09
										無法通行,gpbSub000100_13	
										通行,gpbSub000100_02
										反破壞,gpbSub000100_05
										反脅迫,gpbSub000100_08
										暴力入侵,gpbSub000100_10
										通行模式,gpbSub000100_11
										自動開門,gpbSub000100_12
										
2018/05/10		0.1.9.4			01.修正所以語系切換，都不能執行DB相關，所以DB相關都要可以獨立執行『○』『●』	
								02.修正『人員』、『車輛』匯入匯出要有部門欄位[100%]
									『人員』匯出要有部門欄位『○』
									『車輛』匯出要有部門欄位『○』
									『人員』匯入要有部門欄位『○』
									『車輛』匯入要有部門欄位『○』	 
								03.指紋UI優化-GetComboData1(int index)『○』	
								
2018/05/11		0.1.9.4			01.部門管理要能分頁『○』
								02.部門管理顯示人/車改用View.List『○』
									myListView.View = View.LargeIcon;	原本設定
									myListView.View = View.List;		目前設定
									myListView.View = View.SmallIcon;
								03.修正開啟控制器列表未設定語系的BUG
								04.修正卡片匯入等待資訊只顯示01~50筆的動畫
--------------------------------輸出Workstation[SYCG]-V0194.exe								
								
2018/05/11		0.1.9.5			01.修正部門管理分頁後執行拖拉分類時會因為頁碼問題造成所選與結果對應不上的問題『○』
								
2018/05/14		0.1.9.5			01.從本地上傳DB資料到遠端3萬筆會有ERROR『○』
									WIN10 X64 測試V0194版本 正常
								02.報表UI SQL優化『○』
															
2018/05/15		0.1.9.5			01.資料庫匯入匯出詳細進度顯示『○』
								02.卡片時間匯入未填在授權運算時自動轉換成2000/01/01和2068/01/01『○』
								03.人員配發卡片時，卡片列表用id排序『○』
--------------------------------輸出Workstation[SYCG]-V0195.exe		

2018/05/16		0.1.9.6			01.非中文語系要綁定字型『○』『●』
								02.人員UI要再多一個WEB是否可登錄的選項[100%]
									匯入人員時預設為不登錄-status 的預設值改成 0『○』
									人機介面要能設定是否能登錄
										UI語系檔/初始化『○』
										UI變化紀錄『○』
										DB關聯(載入時)『○』
										DB關聯(寫入時)『○』
				9000枚(TYPE_A)指紋程式整合
					把UI顯示位置調到螢幕正中央
					設定UI一定是TOP
					撰寫sysUninit函數
					改寫抓取指紋，增加配合TIMER的前置作業 ~ [停用Timer -> sysUninit -> sysInit -> 原本抓指紋]
					停用抓取指紋需要輸入指紋ID的程式碼
					可以抓取特徵了
				
2018/05/17		9000枚特徵馬長度不一致~相關整理		[都不固定為384]								
					C#TEMPLATE相關參數
						PDF-	UFM_TEMPLATE_TYPE
								P52~ UFS_PARAM_TEMPLATE_SIZE 302 Template size (byte unit) (256 ~ 1024, 32 bytes step size) 1024
								[C# 沒有UFS_SetParameter函數，只有C++和JAVA 才有]
						code-	const int MAX_TEMPLATE_SIZE = 1024;
								switch (this.cbScanTemplateType.SelectedIndex)
								{
									case 0:
										Scanner.nTemplateType = 2001;
										break;
									case 1:
										Scanner.nTemplateType = 2002;
										break;
									case 2:
										Scanner.nTemplateType = 2003;
										break;
								}									
					BCB-sample資訊
						TEMPLATE_SIZE :384
							code:
								value = 384;
								UFS_SetParameter(hScanner, UFS_PARAM_TEMPLATE_SIZE, &value);      //UFE_PARAM_TEMPLATE_SIZE  302
								value = -1;
								UFS_GetParameter(hScanner, UFS_PARAM_TEMPLATE_SIZE, &value);
								Memo1->Lines->Add("TEMPLATE_SIZE :" + IntToStr(value));							
						TemplateType : suprema template type
							code:
								int TemplateType = 2001;
								UFS_SetTemplateType(hScanner, TemplateType);  //UFS_TEMPLATE_TYPE_SUPREMA     2001  suprema template type
																			  //UFS_TEMPLATE_TYPE_ISO19794_2  2002  ISO template type
																			  //UFS_TEMPLATE_TYPE_ANSI378     2003  ANSI378 template type
								UFS_GetTemplateType(hScanner, &TemplateType);
								if( TemplateType==2001 ){
									Memo1->Lines->Add("TemplateType : suprema template type");
								}
								else if( TemplateType==2002 ){
									Memo1->Lines->Add("TemplateType : ISO template type");
								}
								else if( TemplateType==2003 ){
									Memo1->Lines->Add("TemplateType : ANSI378 template type");
								}
								else {
									Memo1->Lines->Add("TemplateType :" + IntToStr(TemplateType));
								}
						
2018/05/18		suprema 指紋機程式[40%]
					把MAX_TEMPLATE_SIZE從1024改成384	「完成」
					把輸出特徵碼轉16進為輸出到文字檔案Template.mfc[CSV格式] 「完成」
					C#特徵碼和BCB範例比對驗證長度 「完成」
					調整UI大小+隱藏不必要要元件+增加離開按鈕+標題修改+圖示修改
				
2018/05/18		0.1.9.6			01.修正SYDM DB匯入匯出異常問題『○』
								02.SYDM管理頁面中有舊SYDM資料但是SYCG為全新建立時，按下編修要自動幫他變成新增『○』
--------------------------------輸出Workstation[SYCG]-V0196.exe								
							
							
2018/05/21		0.1.9.7			01.車輛管理，駕駛下拉選單無空白欄位『○』
								02.修正區域門區群組建立後無法跳至最上層，除非新增區域在取消『○』
								03.區域門區群組 名稱要不能重複(當重複時必須增夾提示訊息)『○』								
								04.刪除的門區群組匯出也要同步至雲端資料庫，為契機把所有的REPLACE INTO -> INSERT INTO『○』
									Animation.Thread_DownloadDB 完成
									Animation.Thread_UploadDB 完成
								05.發現授權紀錄無法正確上傳並找到原因(web DB的authorization_data多了限制條件，造成#1062 - Duplicate entry '820' for key 'card_id')，已經請HINO修正『○』
								
2018/05/22		0.1.9.7			01.測試INSERTDB.sql.zip檔案在兩個phpmyadmin匯入的速度差異
									目前sycs帳號不具備建立DB的權限，所以之後如果要把Workstation的DB整合到WEB的MYSQL還要再討論
									xampp的mysql比usbweb的mysql慢(xampp的phpmyadmin VS usbweb的phpmyadmin 匯入IN.sql.zip 一個會逾時，一個正常完成)
									syweb的user Table比Workstation的user Table慢(都用xampp的phpmyadmin匯入user Table Workstation比數比較多)
								02.控制器編修完成後不要呼叫控制器列表刷新狀態(fasle<->true)	『○』『●』
								03.控制器在SERVER mode 時 SN 自動填入 日+時+分+秒	『○』『●』
								04.新增未執行部門管理就要新增人員的防呆函數『○』
--------------------------------輸出Workstation[SYCG]-V0197.exe									
								
2018/05/22		0.1.9.8			01.SYDM list 增加 啟用欄位，顯示SYDM是否啟用『○』
								02.SYDM設為未啟用實際傳到資料庫沒有變動狀態『○』
								03.授權時改成就算有錯也要每一筆都傳『○』	(實驗性質)
								
2018/05/23		0.1.9.8			01.把透過SYCG傳送的(授權紀錄)所有命令存成log檔模式，每傳一筆就加上時間把傳送內容記錄下來『○』
								02.把相同SYDM的授權命令集合一次傳送[100%]
									查詢系統目前所有SYDM『○』
									依照SYDM進行授權資料分類+實際傳送『○』
--------------------------------輸出Workstation[SYCG]-V0198.exe										
									
								把控制器取得取的狀態改成一次一個SYDM，而非一台一台問														
								通行設置的 產生日誌記錄，好像打勾 記不住
								重新整理傳送授權(提升速度)+進度顯示
								抓取指紋UI要改成能允許20枚(各10枚)
								
									

								


								
								
								
								修正當WINDOWS系統SYWEB-DB為Service模式時，要能只用SYWEB-DB(PS我自己的開不起來)
									停用無法開啟直接關閉
									要把檢查和資料庫初始化移動到check SYWEB DB
									上述切換要在新增一個全域變數來控制(還要多加判斷SYDM/SYCG)
									

								


								
								任意刪除卡片會造成要授權時出現GG-目前只能在授權時檢查(要提醒小郭是否要再做其他考慮)
								
								傳送作業整個重作
								
								授權多一狀態 是否已傳送
								
								區域要有階層特性，左側DOOR要能停用											
								
								進階門區的設定UI新增
								
								二代證專用機串接
								
								修正匯入控制器門數啟用數量要和SYDM一致
								
								datagridview欄位自動調整縮放 dgvSub0000_01.Columns[X].AutoSizeMode = DataGridViewAutoSizeColumnMode.DisplayedCells;
			


								